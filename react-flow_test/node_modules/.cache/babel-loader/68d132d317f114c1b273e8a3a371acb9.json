{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u041F\\u0420\\u0410\\u041A\\u0422\\u0418\\u041A\\u0410\\\\React\\\\react-flow\\\\react-flow_test\\\\src\\\\react-flow-renderer\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ExportCSV } from './ExportCSV ';\nimport \"./buttons styles.css\"; // import { Tooltip } from '@mui/material';\n\nimport ReactFlow, { removeElements, updateEdge, addEdge, Background, // MiniMap,\nControls } from 'react-flow-renderer';\nimport { nodeTypes } from './Nodes';\nimport styleConnect from './style-connect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = new WebSocket('ws://localhost:5000/');\n\nconst ReactFlowRenderer = () => {\n  _s();\n\n  const [elements, setElements] = useState([styleConnect]); // ------------------- Экспорт в Excel ------------------\n\n  const fileName = 'Scada';\n  const viewers = [{\n    id: elements[id],\n    name: 'sakumar'\n  }, {\n    id: 2,\n    name: 'kumar'\n  }];\n  const [name, setName] = useState(\"\");\n  const [activeNode, setActiveNode] = useState();\n  const [newName, setNewName] = useState(\"\");\n  const [instance, setInstance] = useState();\n  useEffect(() => {\n    if (activeNode) setNewName(activeNode.data.label);\n  }, [activeNode]);\n\n  const elementRemoveHandler = elementTobeRemoved => {\n    setElements(prev => removeElements(elementTobeRemoved, prev));\n  };\n\n  const connectHandler = params => {\n    setElements(els => addEdge({ ...params,\n      type: 'smoothstep',\n      style: {\n        stroke: '#f00'\n      },\n      animated: true\n    }, els));\n  }; // ----------------------- Добавление элементов --------------------------\n\n\n  const addRectangleHandler = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"rectangle\",\n      position: {\n        x: 0,\n        y: 0\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  };\n\n  const addCircleHandler = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"circle\",\n      position: {\n        x: 0,\n        y: 0\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  };\n\n  const addFlagHandler = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"flag\",\n      position: {\n        x: 0,\n        y: 0\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  };\n\n  const addControlUnit = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"controlunit\",\n      position: {\n        x: 0,\n        y: 0\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  }; // ------------------- Добавление независимой задвижки ----------------\n\n\n  const addIndGateValveHandler = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"indgatevalve\",\n      position: {\n        x: -10,\n        y: 30\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  }; // ------------------- Добавление задвижки ----------------\n\n\n  const addGateValveHandler = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"gatevalve\",\n      position: {\n        x: -10,\n        y: 30\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  };\n\n  const addGateValveHandlerRight = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"gatevalveright\",\n      position: {\n        x: -10,\n        y: 30\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  };\n\n  const addGateValveHandlerBot = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"gatevalvebot\",\n      position: {\n        x: -10,\n        y: 30\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  };\n\n  const addGateValveHandlerLeft = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"gatevalveleft\",\n      position: {\n        x: -10,\n        y: 30\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  }; // -----------------------------------\n\n\n  const addTextHandler = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"text\",\n      position: {\n        x: 0,\n        y: 0\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  }; // --------------- Убрать, грубо говоря, линии с задвижки ---------------\n\n\n  const edgeUpdateHandler = (oldEdge, newConnection) => setElements(els => updateEdge(oldEdge, newConnection, els)); // --------------- Приближении при двойном нажатии на мышь ---------------\n\n\n  const clickHandler = e => {\n    var htmlString = e.target.outerHTML.toString();\n    var index = htmlString.indexOf(` id=\"`);\n    index += 15;\n    const currentId = htmlString.substr(index, 13);\n    elements.forEach(_current => {\n      if (_current.id === currentId) {\n        setActiveNode(_current);\n      }\n    }); // setNewName(activeNode.data.label)\n  }; // --------------- Удаление ---------------\n\n\n  const deleteNode = id => {\n    if (elements[id] !== undefined || elements[id] === \"ontouchstart\") {\n      setElements(els => removeElements([elements[id]], els));\n    } else {\n      elements[id] = function (event) {\n        console.log(event);\n      };\n    }\n  }; // --------------- Обновление текста ---------------\n\n\n  const updateNodeHandler = () => {\n    if (!activeNode) return;\n    setElements(elements.map(_current => {\n      if (_current.id === activeNode.id) {\n        return { ..._current,\n          data: {\n            label: newName,\n            id: _current.data.id\n          }\n        };\n      }\n\n      return _current;\n    }));\n  };\n\n  const onLoad = reactFlowInstance => {\n    setInstance(reactFlowInstance);\n    reactFlowInstance.fitView();\n  }; //save pos\n\n\n  const saveChangesHandler = () => {\n    console.log(\"state\", instance.getElements()); //отправка json\n\n    localStorage.setItem('state', JSON.stringify(instance.getElements()));\n    var pos = JSON.stringify(instance.getElements());\n    socket.send(pos);\n  };\n\n  socket.onopen = () => {\n    console.log('подключено');\n  };\n\n  socket.onmessage = event => {\n    console.log('есть сообщение', event.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"75vh\",\n      width: \"75vw\",\n      border: \"1px solid black\",\n      marginLeft: \"12.5vw\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      elements: elements,\n      onElementsRemove: elementRemoveHandler,\n      onConnect: connectHandler,\n      deleteKeyCode: 8 || 46,\n      onEdgeUpdate: edgeUpdateHandler,\n      nodeTypes: nodeTypes,\n      snapToGrid: true,\n      snapGrid: [16, 16],\n      connectionLineStyle: {\n        stroke: \"red\",\n        strokeWidth: 2\n      } // При двойном нажатии  на мышку приближает \n      ,\n      onDoubleClick: clickHandler,\n      onLoad: onLoad,\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        variant: \"dots\",\n        gap: 15,\n        size: 2,\n        color: \"#c8c8c8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        onChange: e => setName(e.target.value),\n        type: \"text\",\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addTextHandler,\n        children: \"\\u0422\\u0435\\u043A\\u0441\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => deleteNode(0),\n        children: \"\\u0423\\u0434\\u0430\\u043B\\u0435\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ExportCSV, {\n          csvData: viewers,\n          fileName: fileName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addIndGateValveHandler,\n        className: \"IndZadv\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://cdn.discordapp.com/attachments/565406946354528268/955394073412395008/5da0c98245011949.png\",\n          alt: \"\\u0417\\u0430\\u0434\\u0432\\u0438\\u0436\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addGateValveHandler,\n        className: \"Zadv\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://media.discordapp.net/attachments/565406946354528268/955138797417414656/9fe81764ae11e11a.png\",\n          alt: \"\\u0417\\u0430\\u0434\\u0432\\u0438\\u0436\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addGateValveHandlerRight,\n        className: \"Zadv-Right\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://media.discordapp.net/attachments/565406946354528268/955147487713325096/e985402b7a23f9ac.png\",\n          alt: \"\\u0417\\u0430\\u0434\\u0432\\u0438\\u0436\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addGateValveHandlerBot,\n        className: \"Zadv-Bot\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://media.discordapp.net/attachments/565406946354528268/955151784907784202/a0416a67cfa4061c.png\",\n          alt: \"\\u0417\\u0430\\u0434\\u0432\\u0438\\u0436\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addGateValveHandlerLeft,\n        className: \"Zadv-Left\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://media.discordapp.net/attachments/565406946354528268/955153077592281190/5bf4af1de854e78a.png\",\n          alt: \"\\u0417\\u0430\\u0434\\u0432\\u0438\\u0436\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addRectangleHandler,\n        className: \"Cistern\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://media.discordapp.net/attachments/565406946354528268/955140552184180757/4f9d807774b88b0e.png\",\n          alt: \"\\u0426\\u0438\\u0441\\u0442\\u0435\\u0440\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addCircleHandler,\n        className: \"Regul\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://media.discordapp.net/attachments/565406946354528268/955138925733769337/20c16b7fc40cbf81.png\",\n          alt: \"\\u0420\\u0435\\u0433\\u0443\\u043B\\u044F\\u0442\\u043E\\u0440\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addFlagHandler,\n        className: \"Flaaag\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://media.discordapp.net/attachments/565406946354528268/955138926069309460/c07fc1d24613f6c7.png\",\n          alt: \"\\u0424\\u043B\\u0430\\u0433\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addControlUnit,\n        className: \"Untitled\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://media.discordapp.net/attachments/565406946354528268/955141072663748659/44f946ecc1121201.png\",\n          alt: \"Untitled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newName,\n        onChange: e => setNewName(e.target.value),\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: updateNodeHandler,\n        children: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: saveChangesHandler,\n        children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 341,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReactFlowRenderer, \"wpOFya5kwpBK8tvms0PnfCZyIic=\");\n\n_c = ReactFlowRenderer;\nexport default ReactFlowRenderer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactFlowRenderer\");","map":{"version":3,"sources":["E:/ПРАКТИКА/React/react-flow/react-flow_test/src/react-flow-renderer/index.jsx"],"names":["React","useState","useEffect","ExportCSV","ReactFlow","removeElements","updateEdge","addEdge","Background","Controls","nodeTypes","styleConnect","socket","WebSocket","ReactFlowRenderer","elements","setElements","fileName","viewers","id","name","setName","activeNode","setActiveNode","newName","setNewName","instance","setInstance","data","label","elementRemoveHandler","elementTobeRemoved","prev","connectHandler","params","els","type","style","stroke","animated","addRectangleHandler","newNode","Date","now","position","x","y","addCircleHandler","addFlagHandler","addControlUnit","addIndGateValveHandler","addGateValveHandler","addGateValveHandlerRight","addGateValveHandlerBot","addGateValveHandlerLeft","addTextHandler","edgeUpdateHandler","oldEdge","newConnection","clickHandler","e","htmlString","target","outerHTML","toString","index","indexOf","currentId","substr","forEach","_current","deleteNode","undefined","event","console","log","updateNodeHandler","map","onLoad","reactFlowInstance","fitView","saveChangesHandler","getElements","localStorage","setItem","JSON","stringify","pos","send","onopen","onmessage","height","width","border","marginLeft","strokeWidth","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ExportCSV } from './ExportCSV ';\r\nimport \"./buttons styles.css\";\r\n// import { Tooltip } from '@mui/material';\r\nimport ReactFlow, {\r\n    removeElements,\r\n    updateEdge,\r\n    addEdge,\r\n    Background,\r\n    // MiniMap,\r\n    Controls\r\n} from 'react-flow-renderer';\r\n\r\nimport { nodeTypes } from './Nodes';\r\nimport styleConnect from './style-connect';\r\nconst socket = new WebSocket('ws://localhost:5000/')\r\n\r\nconst ReactFlowRenderer = () => {\r\n    const [elements, setElements] = useState([styleConnect]);\r\n\r\n    // ------------------- Экспорт в Excel ------------------\r\n\r\n    const fileName = 'Scada'\r\n    const viewers = [\r\n        { id: elements[id], name: 'sakumar' },\r\n        { id: 2, name: 'kumar' }\r\n    ]\r\n\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [activeNode, setActiveNode] = useState();\r\n    const [newName, setNewName] = useState(\"\");\r\n    const [instance, setInstance] = useState();\r\n\r\n    useEffect(() => {\r\n        if (activeNode) setNewName(activeNode.data.label);\r\n    }, [activeNode]);\r\n\r\n    const elementRemoveHandler = (elementTobeRemoved) => {\r\n        setElements((prev) => removeElements(elementTobeRemoved, prev));\r\n    };\r\n\r\n    const connectHandler = (params) => {\r\n        setElements((els) =>\r\n            addEdge({ ...params, type: 'smoothstep', style: { stroke: '#f00' }, animated: true }, els))\r\n    };\r\n\r\n\r\n\r\n    // ----------------------- Добавление элементов --------------------------\r\n\r\n    const addRectangleHandler = () => {\r\n        const newNode = {\r\n            id: `${Date.now()}`,\r\n            data: { label: `${name}` },\r\n            type: \"rectangle\",\r\n            position: {\r\n                x: 0,\r\n                y: 0\r\n            }\r\n        };\r\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\r\n\r\n        setElements((prev) => {\r\n            return [...prev, newNode];\r\n        });\r\n        setName(\"\");\r\n    };\r\n\r\n    const addCircleHandler = () => {\r\n        const newNode = {\r\n            id: `${Date.now()}`,\r\n            data: { label: `${name}` },\r\n            type: \"circle\",\r\n            position: {\r\n                x: 0,\r\n                y: 0\r\n            }\r\n        };\r\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\r\n\r\n        setElements((prev) => {\r\n            return [...prev, newNode];\r\n        });\r\n        setName(\"\");\r\n    };\r\n\r\n    const addFlagHandler = () => {\r\n        const newNode = {\r\n            id: `${Date.now()}`,\r\n            data: { label: `${name}` },\r\n            type: \"flag\",\r\n            position: {\r\n                x: 0,\r\n                y: 0\r\n            }\r\n        };\r\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\r\n\r\n        setElements((prev) => {\r\n            return [...prev, newNode];\r\n        });\r\n        setName(\"\");\r\n    };\r\n\r\n\r\n    const addControlUnit = () => {\r\n        const newNode = {\r\n            id: `${Date.now()}`,\r\n            data: { label: `${name}` },\r\n            type: \"controlunit\",\r\n            position: {\r\n                x: 0,\r\n                y: 0\r\n            }\r\n        };\r\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\r\n\r\n        setElements((prev) => {\r\n            return [...prev, newNode];\r\n        });\r\n        setName(\"\");\r\n    };\r\n\r\n\r\n\r\n\r\n    // ------------------- Добавление независимой задвижки ----------------\r\n\r\n    const addIndGateValveHandler = () => {\r\n        const newNode = {\r\n            id: `${Date.now()}`,\r\n            data: { label: `${name}` },\r\n            type: \"indgatevalve\",\r\n            position: {\r\n                x: -10,\r\n                y: 30\r\n            }\r\n        };\r\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\r\n\r\n        setElements((prev) => {\r\n            return [...prev, newNode];\r\n        });\r\n        setName(\"\");\r\n    };\r\n\r\n\r\n\r\n\r\n    // ------------------- Добавление задвижки ----------------\r\n\r\n    const addGateValveHandler = () => {\r\n        const newNode = {\r\n            id: `${Date.now()}`,\r\n            data: { label: `${name}` },\r\n            type: \"gatevalve\",\r\n            position: {\r\n                x: -10,\r\n                y: 30\r\n            }\r\n        };\r\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\r\n\r\n        setElements((prev) => {\r\n            return [...prev, newNode];\r\n        });\r\n        setName(\"\");\r\n    };\r\n\r\n\r\n\r\n    const addGateValveHandlerRight = () => {\r\n        const newNode = {\r\n            id: `${Date.now()}`,\r\n            data: { label: `${name}` },\r\n            type: \"gatevalveright\",\r\n            position: {\r\n                x: -10,\r\n                y: 30\r\n            }\r\n        };\r\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\r\n\r\n        setElements((prev) => {\r\n            return [...prev, newNode];\r\n        });\r\n        setName(\"\");\r\n    };\r\n\r\n\r\n\r\n    const addGateValveHandlerBot = () => {\r\n        const newNode = {\r\n            id: `${Date.now()}`,\r\n            data: { label: `${name}` },\r\n            type: \"gatevalvebot\",\r\n            position: {\r\n                x: -10,\r\n                y: 30\r\n            }\r\n        };\r\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\r\n\r\n        setElements((prev) => {\r\n            return [...prev, newNode];\r\n        });\r\n        setName(\"\");\r\n    };\r\n\r\n\r\n\r\n    const addGateValveHandlerLeft = () => {\r\n        const newNode = {\r\n            id: `${Date.now()}`,\r\n            data: { label: `${name}` },\r\n            type: \"gatevalveleft\",\r\n            position: {\r\n                x: -10,\r\n                y: 30\r\n            }\r\n        };\r\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\r\n\r\n        setElements((prev) => {\r\n            return [...prev, newNode];\r\n        });\r\n        setName(\"\");\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    // -----------------------------------\r\n\r\n    const addTextHandler = () => {\r\n        const newNode = {\r\n            id: `${Date.now()}`,\r\n            data: { label: `${name}` },\r\n            type: \"text\",\r\n            position: {\r\n                x: 0,\r\n                y: 0\r\n            }\r\n        };\r\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\r\n\r\n        setElements((prev) => {\r\n            return [...prev, newNode];\r\n        });\r\n        setName(\"\");\r\n    };\r\n\r\n\r\n    // --------------- Убрать, грубо говоря, линии с задвижки ---------------\r\n\r\n\r\n    const edgeUpdateHandler = (oldEdge, newConnection) =>\r\n        setElements((els) => updateEdge(oldEdge, newConnection, els));\r\n\r\n\r\n\r\n    // --------------- Приближении при двойном нажатии на мышь ---------------\r\n\r\n    const clickHandler = (e) => {\r\n        var htmlString = e.target.outerHTML.toString();\r\n        var index = htmlString.indexOf(` id=\"`);\r\n        index += 15;\r\n        const currentId = htmlString.substr(index, 13);\r\n\r\n        elements.forEach((_current) => {\r\n            if (_current.id === currentId) {\r\n                setActiveNode(_current);\r\n            }\r\n        });\r\n        // setNewName(activeNode.data.label)\r\n    };\r\n\r\n\r\n    // --------------- Удаление ---------------\r\n\r\n\r\n    const deleteNode = (id) => {\r\n        if (elements[id] !== undefined || elements[id] === \"ontouchstart\") {\r\n            setElements((els) => removeElements([elements[id]], els));\r\n\r\n        }\r\n        else {\r\n            elements[id] = function (event) {\r\n                console.log(event);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    // --------------- Обновление текста ---------------\r\n\r\n    const updateNodeHandler = () => {\r\n        if (!activeNode) return;\r\n        setElements(\r\n            elements.map((_current) => {\r\n                if (_current.id === activeNode.id) {\r\n                    return {\r\n                        ..._current,\r\n                        data: { label: newName, id: _current.data.id }\r\n                    };\r\n                }\r\n\r\n                return _current;\r\n            })\r\n        );\r\n    };\r\n\r\n\r\n    const onLoad = (reactFlowInstance) => {\r\n        setInstance(reactFlowInstance);\r\n        reactFlowInstance.fitView();\r\n    };\r\n\r\n    //save pos\r\n    const saveChangesHandler = () => {\r\n        console.log(\"state\", instance.getElements());\r\n        //отправка json\r\n        localStorage.setItem('state', JSON.stringify(instance.getElements()));\r\n        var pos = JSON.stringify(instance.getElements());\r\n        socket.send(pos);\r\n    };\r\n\r\n    socket.onopen = () => {\r\n        console.log('подключено');\r\n    }\r\n\r\n    socket.onmessage = (event) => {\r\n        console.log('есть сообщение', event.data)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                height: \"75vh\",\r\n                width: \"75vw\",\r\n                border: \"1px solid black\",\r\n                marginLeft: \"12.5vw\"\r\n            }}\r\n        >\r\n            <ReactFlow\r\n                elements={elements}\r\n                onElementsRemove={elementRemoveHandler}\r\n                onConnect={connectHandler}\r\n                deleteKeyCode={8 || 46}\r\n                onEdgeUpdate={edgeUpdateHandler}\r\n                nodeTypes={nodeTypes}\r\n                snapToGrid={true}\r\n                snapGrid={[16, 16]}\r\n                connectionLineStyle={{ stroke: \"red\", strokeWidth: 2 }}\r\n                // При двойном нажатии  на мышку приближает \r\n                onDoubleClick={clickHandler}\r\n                onLoad={onLoad}\r\n            >\r\n                <Background variant=\"dots\" gap={15} size={2} color=\"#c8c8c8\" />\r\n                {/* Мини карта\r\n            <MiniMap\r\n                nodeColor={(node) => {\r\n                    switch (node.type) {\r\n                        case \"rectangle\":\r\n                            return \"red\";\r\n                        case \"circle\":\r\n                            return \"#00ff00\";\r\n                        case \"triangle\":\r\n                            return \"rgb(0,0,255)\";\r\n                        default:\r\n                            return \"#eee\";\r\n                    }   \r\n                }}\r\n            /> */}\r\n\r\n                <Controls />\r\n            </ReactFlow>\r\n\r\n            <div>\r\n                <input\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    type=\"text\"\r\n                    placeholder=\"Введите текст\"\r\n                />\r\n\r\n                <button type=\"button\" onClick={addTextHandler}>\r\n                    Текст\r\n                </button>\r\n                <button type='button' onClick={() => deleteNode(0)} >\r\n                    Удаление\r\n                </button>\r\n\r\n                <div>\r\n                    <ExportCSV csvData={viewers} fileName={fileName} />\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <div>\r\n\r\n\r\n                <button type=\"button\" onClick={addIndGateValveHandler} className=\"IndZadv\">\r\n                    <img src=\"https://cdn.discordapp.com/attachments/565406946354528268/955394073412395008/5da0c98245011949.png\" alt='Задвижка'></img>\r\n                </button>\r\n\r\n                <button type=\"button\" onClick={addGateValveHandler} className=\"Zadv\">\r\n                    <img src=\"https://media.discordapp.net/attachments/565406946354528268/955138797417414656/9fe81764ae11e11a.png\" alt='Задвижка'></img>\r\n                </button>\r\n\r\n                <button type=\"button\" onClick={addGateValveHandlerRight} className=\"Zadv-Right\">\r\n                    <img src=\"https://media.discordapp.net/attachments/565406946354528268/955147487713325096/e985402b7a23f9ac.png\" alt='Задвижка'></img>\r\n                </button>\r\n\r\n                <button type=\"button\" onClick={addGateValveHandlerBot} className=\"Zadv-Bot\">\r\n                    <img src=\"https://media.discordapp.net/attachments/565406946354528268/955151784907784202/a0416a67cfa4061c.png\" alt='Задвижка'></img>\r\n                </button>\r\n\r\n                <button type=\"button\" onClick={addGateValveHandlerLeft} className=\"Zadv-Left\">\r\n                    <img src=\"https://media.discordapp.net/attachments/565406946354528268/955153077592281190/5bf4af1de854e78a.png\" alt='Задвижка'></img>\r\n                </button>\r\n\r\n                <button type=\"button\" onClick={addRectangleHandler} className=\"Cistern\">\r\n                    <img src='https://media.discordapp.net/attachments/565406946354528268/955140552184180757/4f9d807774b88b0e.png' alt='Цистерна'></img>\r\n                </button>\r\n\r\n\r\n                <button type=\"button\" onClick={addCircleHandler} className=\"Regul\">\r\n                    <img src=\"https://media.discordapp.net/attachments/565406946354528268/955138925733769337/20c16b7fc40cbf81.png\" alt='Регулятор'></img>\r\n                </button>\r\n\r\n                <button type=\"button\" onClick={addFlagHandler} className=\"Flaaag\">\r\n                    <img src=\"https://media.discordapp.net/attachments/565406946354528268/955138926069309460/c07fc1d24613f6c7.png\" alt='Флаг'></img>\r\n                </button>\r\n\r\n                <button type=\"button\" onClick={addControlUnit} className=\"Untitled\">\r\n                    <img src=\"https://media.discordapp.net/attachments/565406946354528268/955141072663748659/44f946ecc1121201.png\" alt='Untitled'></img>\r\n                </button>\r\n            </div>\r\n\r\n            <div>\r\n                <input\r\n                    value={newName}\r\n                    onChange={(e) => setNewName(e.target.value)}\r\n                    type=\"text\"\r\n                />\r\n\r\n                <button type=\"button\" onClick={updateNodeHandler}>\r\n                    Обновить\r\n                </button>\r\n            </div>\r\n\r\n            <div>\r\n                <button type=\"button\" onClick={saveChangesHandler}>\r\n                    Сохранить\r\n                </button>\r\n\r\n                {/*<button type='button' onClick={sendPos}>\r\n                Send Pos on Server\r\n            </button>*/}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReactFlowRenderer;"]},"metadata":{},"sourceType":"module"}