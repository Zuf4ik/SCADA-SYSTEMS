{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438\\\\Scada-react-flow-main\\\\react-flow_test\\\\src\\\\react-flow-renderer\\\\index.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { ExportCSV } from './ExportCSV ';\nimport \"./css/buttons_styles.css\";\nimport ReactFlow, { removeElements, updateEdge, addEdge, Background, Controls, ReactFlowProvider, MiniMap, useZoomPanHelper } from 'react-flow-renderer';\nimport localforage from 'localforage';\nimport LoadingJson from './LoadingJSON';\nimport { nodeTypes } from './Nodes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = new WebSocket('ws://localhost:5000/');\nlocalforage.config({\n  name: 'react-flow-docs',\n  storeName: 'flows'\n});\n\nconst ReactFlowRenderer = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [elements, setElements] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [parsedFile, setParsedFile] = useState(null);\n\n  const onDrop = async e => {\n    e.preventDefault();\n    if (disabled) return;\n    setFiles([...e.dataTransfer.files]);\n    const fileReader = new FileReader();\n    await fileReader.readAsText(e.dataTransfer.files[0]);\n\n    fileReader.onload = e => {\n      setParsedFile(JSON.parse(e.target.result));\n    }; // e.dataTransfer.clearData();\n    // setDragging(false);\n\n  };\n\n  const renderHasFiles = () => {\n    _s();\n\n    // console.log('files: ', files);\n    //    var views = useState([elements])\n    // ------------------- Экспорт в Excel ------------------\n    const fileName = 'Scada';\n    const [name, setName] = useState(\"\");\n    const [activeNode, setActiveNode] = useState();\n    const [newName, setNewName] = useState(\"\");\n    const [instance, setInstance] = useState();\n    const {\n      transform\n    } = useZoomPanHelper();\n    const flowKey = 'example-flow';\n    useEffect(() => {\n      if (activeNode) setNewName(activeNode.data.label);\n    }, [activeNode]); // --------------- Сохранение в локальном хранилище ---------------\n\n    const onSave = useCallback(() => {\n      if (instance) {\n        const flow = instance.toObject();\n        localforage.setItem(flowKey, flow);\n        console.log(\"Объекты сохранены\");\n      }\n    }, [instance]); // --------------- Загрузка ---------------\n\n    const onRestore = useCallback(() => {\n      const restoreFlow = async () => {\n        const flow = await localforage.getItem(flowKey);\n\n        if (flow) {\n          const [x = 0, y = 0] = flow.position;\n          setElements(flow.elements || []);\n          transform({\n            x,\n            y,\n            zoom: flow.zoom || 0\n          });\n        }\n      };\n\n      restoreFlow();\n    }, [setElements, transform]);\n\n    function readJSON(path) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', path, true);\n      xhr.responseType = 'blob';\n\n      xhr.onload = function (e) {\n        if (this.status == 200) {\n          var file = new File([this.response], 'temp');\n          var fileReader = new FileReader();\n          fileReader.addEventListener('load', function () {//do stuff with fileReader.result \n          });\n          fileReader.readAsText(file);\n        }\n      };\n\n      xhr.send();\n    } // --------------- Сохранение через локальный диск ---------------\n\n\n    const exportToJson = () => {\n      let filename = \"Scada-systems.json\";\n      let contentType = \"application/json;charset=utf-8;\";\n\n      if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n        var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(elements)))], {\n          type: contentType\n        });\n        navigator.msSaveOrOpenBlob(blob, filename);\n      } else {\n        var a = document.createElement('a');\n        a.download = filename;\n        a.href = 'data:' + contentType + ',' + encodeURIComponent(JSON.stringify(elements));\n        a.target = '_blank';\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n      }\n    }; // --------------- Удаление ---------------\n\n\n    const elementRemoveHandler = elementTobeRemoved => {\n      setElements(prev => removeElements(elementTobeRemoved, prev));\n    };\n\n    const connectHandler = params => {\n      setElements(els => addEdge({ ...params,\n        type: 'step',\n        style: {\n          stroke: 'red'\n        }\n      }, els));\n    }; // ----------------------- Добавление элементов --------------------------\n\n\n    const addRectangleHandler = () => {\n      const newNode = {\n        id: `${Date.now()}`,\n        data: {\n          label: `${name}`\n        },\n        type: \"pump\",\n        position: {\n          x: 0,\n          y: 0\n        }\n      };\n      newNode.data = { ...newNode.data,\n        id: `${newNode.id}`\n      };\n      setElements(prev => {\n        return [...prev, newNode];\n      });\n      setName(\"\");\n    };\n\n    const addCircleHandler = () => {\n      const newNode = {\n        id: `${Date.now()}`,\n        data: {\n          label: `${name}`\n        },\n        type: \"circle\",\n        position: {\n          x: 0,\n          y: 0\n        }\n      };\n      newNode.data = { ...newNode.data,\n        id: `${newNode.id}`\n      };\n      setElements(prev => {\n        return [...prev, newNode];\n      });\n      setName(\"\");\n    };\n\n    const addFlagHandler = () => {\n      const newNode = {\n        id: `${Date.now()}`,\n        data: {\n          label: `${name}`\n        },\n        type: \"flag\",\n        position: {\n          x: 0,\n          y: 0\n        }\n      };\n      newNode.data = { ...newNode.data,\n        id: `${newNode.id}`\n      };\n      setElements(prev => {\n        return [...prev, newNode];\n      });\n      setName(\"\");\n    };\n\n    const addControlUnit = () => {\n      const newNode = {\n        id: `${Date.now()}`,\n        data: {\n          label: `${name}`\n        },\n        type: \"controlunit\",\n        position: {\n          x: 0,\n          y: 0\n        }\n      };\n      newNode.data = { ...newNode.data,\n        id: `${newNode.id}`\n      };\n      setElements(prev => {\n        return [...prev, newNode];\n      });\n      setName(\"\");\n    }; // ------------------- Добавление независимой задвижки ----------------\n\n\n    const addIndGateValveHandler = () => {\n      const newNode = {\n        id: `${Date.now()}`,\n        data: {\n          label: `${name}`\n        },\n        type: \"indgatevalve\",\n        position: {\n          x: -10,\n          y: 30\n        }\n      };\n      newNode.data = { ...newNode.data,\n        id: `${newNode.id}`\n      };\n      setElements(prev => {\n        return [...prev, newNode];\n      });\n      setName(\"\");\n    }; // ------------------- Добавление задвижки ----------------\n\n\n    const addGateValveHandler = () => {\n      const newNode = {\n        id: `${Date.now()}`,\n        data: {\n          label: `${name}`\n        },\n        type: \"gatevalve\",\n        position: {\n          x: -10,\n          y: 30\n        }\n      };\n      newNode.data = { ...newNode.data,\n        id: `${newNode.id}`\n      };\n      setElements(prev => {\n        return [...prev, newNode];\n      });\n      setName(\"\");\n    };\n\n    const addGateValveHandlerRight = () => {\n      const newNode = {\n        id: `${Date.now()}`,\n        data: {\n          label: `${name}`\n        },\n        type: \"gatevalveright\",\n        position: {\n          x: -10,\n          y: 30\n        }\n      };\n      newNode.data = { ...newNode.data,\n        id: `${newNode.id}`\n      };\n      setElements(prev => {\n        return [...prev, newNode];\n      });\n      setName(\"\");\n    };\n\n    const addGateValveHandlerBot = () => {\n      const newNode = {\n        id: `${Date.now()}`,\n        data: {\n          label: `${name}`\n        },\n        type: \"gatevalvebot\",\n        position: {\n          x: -10,\n          y: 30\n        }\n      };\n      newNode.data = { ...newNode.data,\n        id: `${newNode.id}`\n      };\n      setElements(prev => {\n        return [...prev, newNode];\n      });\n      setName(\"\");\n    };\n\n    const addGateValveHandlerLeft = () => {\n      const newNode = {\n        id: `${Date.now()}`,\n        data: {\n          label: `${name}`\n        },\n        type: \"gatevalveleft\",\n        position: {\n          x: -10,\n          y: 30\n        }\n      };\n      newNode.data = { ...newNode.data,\n        id: `${newNode.id}`\n      };\n      setElements(prev => {\n        return [...prev, newNode];\n      });\n      setName(\"\");\n    }; // -----------------------------------\n\n\n    const addTextHandler = () => {\n      const newNode = {\n        id: `${Date.now()}`,\n        data: {\n          label: `${name}`\n        },\n        type: \"text\",\n        position: {\n          x: 0,\n          y: 0\n        }\n      };\n      newNode.data = { ...newNode.data,\n        id: `${newNode.id}`\n      };\n      setElements(prev => {\n        return [...prev, newNode];\n      });\n      setName(\"\");\n    }; // --------------- Убрать, грубо говоря, линии с задвижки ---------------\n\n\n    const edgeUpdateHandler = (oldEdge, newConnection) => setElements(els => updateEdge(oldEdge, newConnection, els)); // --------------- Приближении при двойном нажатии на мышь ---------------\n\n\n    const clickHandler = e => {\n      var htmlString = e.target.outerHTML.toString();\n      var index = htmlString.indexOf(` id=\"`);\n      index += 15;\n      const currentId = htmlString.substr(index, 13);\n      elements.forEach(_current => {\n        if (_current.id === currentId) {\n          setActiveNode(_current);\n        }\n      }); // setNewName(activeNode.data.label)\n    }; // --------------- Обновление текста ---------------\n\n\n    const updateNodeHandler = () => {\n      if (!activeNode) return;\n      setElements(elements.map(_current => {\n        if (_current.id === activeNode.id) {\n          return { ..._current,\n            data: {\n              label: newName,\n              id: _current.data.id\n            }\n          };\n        }\n\n        return _current;\n      }));\n    };\n\n    const onLoad = reactFlowInstance => {\n      setInstance(reactFlowInstance);\n      reactFlowInstance.fitView();\n    }; // --------------- Сохранение через сервер ---------------\n    // //save pos\n    // const saveChangesHandler = () => {\n    //     console.log(\"state\", instance.getElements());\n    //     //отправка json\n    //     localStorage.setItem('state', JSON.stringify(instance.getElements()));\n    //     var pos = JSON.stringify(instance.getElements());\n    //     socket.send(pos);\n    // };\n    // socket.onopen = () => {\n    //     console.log('подключено');\n    // }\n    // socket.onmessage = (event) => {\n    //     console.log('есть сообщение')\n    //     const dataSave = JSON.parse(JSON.stringify(event.data));\n    //     console.log(dataSave)\n    // }\n    // // --------------- Загрузка ---------------\n    // const onRestoreJson = useCallback(() => {\n    //     const restoreJson = async (event) => {\n    //         const flow = JSON.parse(event.data);\n    //         if (flow) {\n    //             const [x = 0, y = 0] = flow.position;\n    //             setElements(flow.elements || []);\n    //             transform({ x, y, zoom: flow.zoom || 0 });\n    //             console.log(\"Загрузка прошла\")\n    //         }\n    //         else {\n    //             console.log(\"Загрузка не прошла\")\n    //         }\n    //     };\n    //     restoreJson();\n    // }, [setElements, transform]\n    // );\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"75vh\",\n        width: \"75vw\",\n        border: \"1px solid black\",\n        marginLeft: \"14.7em\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n        elements: elements,\n        onElementsRemove: elementRemoveHandler,\n        onConnect: connectHandler,\n        deleteKeyCode: 8 || 46,\n        onEdgeUpdate: edgeUpdateHandler,\n        nodeTypes: nodeTypes,\n        snapToGrid: true,\n        snapGrid: [16, 16],\n        connectionLineStyle: {\n          stroke: \"red\",\n          type: 'step',\n          strokeWidth: 2\n        } // При двойном нажатии  на мышку приближает \n        ,\n        onDoubleClick: clickHandler,\n        onLoad: onLoad,\n        children: [/*#__PURE__*/_jsxDEV(Background, {\n          variant: \"dots\",\n          gap: 15,\n          size: 2,\n          color: \"#c8c8c8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: name,\n          onChange: e => setName(e.target.value),\n          type: \"text\",\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addTextHandler,\n          children: \"\\u0422\\u0435\\u043A\\u0441\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: /*#__PURE__*/_jsxDEV(ExportCSV, {\n            csvData: elements,\n            fileName: fileName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addIndGateValveHandler,\n          className: \"IndZadv\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://cdn.discordapp.com/attachments/565406946354528268/955394073412395008/5da0c98245011949.png\",\n            alt: \"\\u0417\\u0430\\u0434\\u0432\\u0438\\u0436\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addGateValveHandler,\n          className: \"Zadv\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://media.discordapp.net/attachments/565406946354528268/955138797417414656/9fe81764ae11e11a.png\",\n            alt: \"\\u0417\\u0430\\u0434\\u0432\\u0438\\u0436\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addGateValveHandlerRight,\n          className: \"Zadv-Right\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://media.discordapp.net/attachments/565406946354528268/955147487713325096/e985402b7a23f9ac.png\",\n            alt: \"\\u0417\\u0430\\u0434\\u0432\\u0438\\u0436\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addGateValveHandlerBot,\n          className: \"Zadv-Bot\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://media.discordapp.net/attachments/565406946354528268/955151784907784202/a0416a67cfa4061c.png\",\n            alt: \"\\u0417\\u0430\\u0434\\u0432\\u0438\\u0436\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addGateValveHandlerLeft,\n          className: \"Zadv-Left\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://media.discordapp.net/attachments/565406946354528268/955153077592281190/5bf4af1de854e78a.png\",\n            alt: \"\\u0417\\u0430\\u0434\\u0432\\u0438\\u0436\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addRectangleHandler,\n          className: \"Cistern\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://media.discordapp.net/attachments/565406946354528268/955140552184180757/4f9d807774b88b0e.png\",\n            alt: \"\\u0426\\u0438\\u0441\\u0442\\u0435\\u0440\\u043D\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addCircleHandler,\n          className: \"Regul\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://media.discordapp.net/attachments/565406946354528268/955138925733769337/20c16b7fc40cbf81.png\",\n            alt: \"\\u0420\\u0435\\u0433\\u0443\\u043B\\u044F\\u0442\\u043E\\u0440\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addFlagHandler,\n          className: \"Flaaag\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://media.discordapp.net/attachments/565406946354528268/955138926069309460/c07fc1d24613f6c7.png\",\n            alt: \"\\u0424\\u043B\\u0430\\u0433\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addControlUnit,\n          className: \"Untitled\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://media.discordapp.net/attachments/565406946354528268/955141072663748659/44f946ecc1121201.png\",\n            alt: \"Untitled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: newName,\n          onChange: e => setNewName(e.target.value),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: updateNodeHandler,\n          children: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onRestore,\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onSave,\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u043D\\u0438\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: exportToJson,\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 13\n    }, this);\n  };\n\n  _s(renderHasFiles, \"u2OneI+C6SnA1qg6ParoSN5TIGI=\", false, function () {\n    return [useZoomPanHelper];\n  });\n};\n\n_s2(ReactFlowRenderer, \"8/ZaFxaDckrIpsX9nrnk3zcew8A=\");\n\n_c = ReactFlowRenderer;\nexport default (() => /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n  children: /*#__PURE__*/_jsxDEV(ReactFlowRenderer, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 596,\n    columnNumber: 13\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 595,\n  columnNumber: 9\n}, this));\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactFlowRenderer\");","map":{"version":3,"sources":["E:/Загрузки/Scada-react-flow-main/react-flow_test/src/react-flow-renderer/index.jsx"],"names":["React","useState","useEffect","useCallback","ExportCSV","ReactFlow","removeElements","updateEdge","addEdge","Background","Controls","ReactFlowProvider","MiniMap","useZoomPanHelper","localforage","LoadingJson","nodeTypes","socket","WebSocket","config","name","storeName","ReactFlowRenderer","elements","setElements","files","setFiles","parsedFile","setParsedFile","onDrop","e","preventDefault","disabled","dataTransfer","fileReader","FileReader","readAsText","onload","JSON","parse","target","result","renderHasFiles","fileName","setName","activeNode","setActiveNode","newName","setNewName","instance","setInstance","transform","flowKey","data","label","onSave","flow","toObject","setItem","console","log","onRestore","restoreFlow","getItem","x","y","position","zoom","readJSON","path","xhr","XMLHttpRequest","open","responseType","status","file","File","response","addEventListener","send","exportToJson","filename","contentType","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","stringify","type","a","document","createElement","download","href","encodeURIComponent","body","appendChild","click","removeChild","elementRemoveHandler","elementTobeRemoved","prev","connectHandler","params","els","style","stroke","addRectangleHandler","newNode","id","Date","now","addCircleHandler","addFlagHandler","addControlUnit","addIndGateValveHandler","addGateValveHandler","addGateValveHandlerRight","addGateValveHandlerBot","addGateValveHandlerLeft","addTextHandler","edgeUpdateHandler","oldEdge","newConnection","clickHandler","htmlString","outerHTML","toString","index","indexOf","currentId","substr","forEach","_current","updateNodeHandler","map","onLoad","reactFlowInstance","fitView","height","width","border","marginLeft","strokeWidth","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { ExportCSV } from './ExportCSV ';\nimport \"./css/buttons_styles.css\"\nimport ReactFlow, {\n    removeElements,\n    updateEdge,\n    addEdge,\n    Background,\n    Controls,\n    ReactFlowProvider,\n    MiniMap,\n    useZoomPanHelper\n} from 'react-flow-renderer';\nimport localforage from 'localforage';\nimport LoadingJson from './LoadingJSON';\nimport { nodeTypes } from './Nodes';\nconst socket = new WebSocket('ws://localhost:5000/')\n\nlocalforage.config({\n    name: 'react-flow-docs',\n    storeName: 'flows',\n});\n\n\n\n\n\n\nconst ReactFlowRenderer = () => {\n    const [elements, setElements] = useState([]);\n    const [files, setFiles] = useState([]);\n    const [parsedFile, setParsedFile] = useState(null);\n\n\n    const onDrop = async (e) => {\n        e.preventDefault();\n        if (disabled) return;\n        setFiles([...e.dataTransfer.files]);\n\n        const fileReader = new FileReader();\n\n        await fileReader.readAsText(e.dataTransfer.files[0]);\n    \n        fileReader.onload = (e) => {\n          setParsedFile(JSON.parse(e.target.result));\n        };\n    \n        // e.dataTransfer.clearData();\n        // setDragging(false);\n      };\n    \n      const renderHasFiles = () => {\n        // console.log('files: ', files);\n\n\n\n        //    var views = useState([elements])\n\n\n        // ------------------- Экспорт в Excel ------------------\n\n        const fileName = 'Scada'\n\n        const [name, setName] = useState(\"\");\n        const [activeNode, setActiveNode] = useState();\n        const [newName, setNewName] = useState(\"\");\n        const [instance, setInstance] = useState();\n        const { transform } = useZoomPanHelper();\n\n\n        const flowKey = 'example-flow';\n\n        useEffect(() => {\n            if (activeNode) setNewName(activeNode.data.label);\n        }, [activeNode]);\n\n\n        // --------------- Сохранение в локальном хранилище ---------------\n\n        const onSave = useCallback(() => {\n\n            if (instance) {\n                const flow = instance.toObject();\n                localforage.setItem(flowKey, flow);\n                console.log(\"Объекты сохранены\")\n            }\n\n        }, [instance]);\n\n\n\n        // --------------- Загрузка ---------------\n\n        const onRestore = useCallback(() => {\n            const restoreFlow = async () => {\n                const flow = await localforage.getItem(flowKey);\n\n\n                if (flow) {\n                    const [x = 0, y = 0] = flow.position;\n                    setElements(flow.elements || []);\n                    transform({ x, y, zoom: flow.zoom || 0 });\n                }\n\n            };\n            restoreFlow();\n        }, [setElements, transform]\n\n        );\n\n\n\n        function readJSON(path) {\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', path, true);\n            xhr.responseType = 'blob';\n            xhr.onload = function (e) {\n                if (this.status == 200) {\n                    var file = new File([this.response], 'temp');\n                    var fileReader = new FileReader();\n                    fileReader.addEventListener('load', function () {\n                        //do stuff with fileReader.result \n                    });\n                    fileReader.readAsText(file);\n                }\n            }\n            xhr.send();\n        }\n\n        // --------------- Сохранение через локальный диск ---------------\n\n\n\n\n        const exportToJson = () => {\n            let filename = \"Scada-systems.json\";\n            let contentType = \"application/json;charset=utf-8;\";\n            if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n                var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(elements)))], { type: contentType });\n                navigator.msSaveOrOpenBlob(blob, filename);\n            } else {\n                var a = document.createElement('a');\n                a.download = filename;\n                a.href = 'data:' + contentType + ',' + encodeURIComponent(JSON.stringify(elements));\n                a.target = '_blank';\n                document.body.appendChild(a);\n                a.click();\n                document.body.removeChild(a);\n            }\n        }\n\n\n        // --------------- Удаление ---------------\n\n\n        const elementRemoveHandler = (elementTobeRemoved) => {\n            setElements((prev) => removeElements(elementTobeRemoved, prev));\n        };\n\n\n        const connectHandler = (params) => {\n            setElements((els) =>\n                addEdge({ ...params, type: 'step', style: { stroke: 'red' } }, els))\n        };\n\n\n\n\n        // ----------------------- Добавление элементов --------------------------\n\n        const addRectangleHandler = () => {\n            const newNode = {\n                id: `${Date.now()}`,\n                data: { label: `${name}` },\n                type: \"pump\",\n                position: {\n                    x: 0,\n                    y: 0\n                }\n            };\n            newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n            setElements((prev) => {\n                return [...prev, newNode];\n            });\n            setName(\"\");\n        };\n\n        const addCircleHandler = () => {\n            const newNode = {\n                id: `${Date.now()}`,\n                data: { label: `${name}` },\n                type: \"circle\",\n                position: {\n                    x: 0,\n                    y: 0\n                }\n            };\n            newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n            setElements((prev) => {\n                return [...prev, newNode];\n            });\n            setName(\"\");\n        };\n\n        const addFlagHandler = () => {\n            const newNode = {\n                id: `${Date.now()}`,\n                data: { label: `${name}` },\n                type: \"flag\",\n                position: {\n                    x: 0,\n                    y: 0\n                }\n            };\n            newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n            setElements((prev) => {\n                return [...prev, newNode];\n            });\n            setName(\"\");\n        };\n\n\n        const addControlUnit = () => {\n            const newNode = {\n                id: `${Date.now()}`,\n                data: { label: `${name}` },\n                type: \"controlunit\",\n                position: {\n                    x: 0,\n                    y: 0\n                }\n            };\n            newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n            setElements((prev) => {\n                return [...prev, newNode];\n            });\n            setName(\"\");\n        };\n\n\n        // ------------------- Добавление независимой задвижки ----------------\n\n        const addIndGateValveHandler = () => {\n            const newNode = {\n                id: `${Date.now()}`,\n                data: { label: `${name}` },\n                type: \"indgatevalve\",\n                position: {\n                    x: -10,\n                    y: 30\n                }\n            };\n            newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n            setElements((prev) => {\n                return [...prev, newNode];\n            });\n            setName(\"\");\n        };\n\n\n        // ------------------- Добавление задвижки ----------------\n\n        const addGateValveHandler = () => {\n            const newNode = {\n                id: `${Date.now()}`,\n                data: { label: `${name}` },\n                type: \"gatevalve\",\n                position: {\n                    x: -10,\n                    y: 30\n                }\n            };\n            newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n            setElements((prev) => {\n                return [...prev, newNode];\n            });\n            setName(\"\");\n        };\n\n\n        const addGateValveHandlerRight = () => {\n            const newNode = {\n                id: `${Date.now()}`,\n                data: { label: `${name}` },\n                type: \"gatevalveright\",\n                position: {\n                    x: -10,\n                    y: 30\n                }\n            };\n            newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n            setElements((prev) => {\n                return [...prev, newNode];\n            });\n            setName(\"\");\n        };\n\n\n        const addGateValveHandlerBot = () => {\n            const newNode = {\n                id: `${Date.now()}`,\n                data: { label: `${name}` },\n                type: \"gatevalvebot\",\n                position: {\n                    x: -10,\n                    y: 30\n                }\n            };\n            newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n            setElements((prev) => {\n                return [...prev, newNode];\n            });\n            setName(\"\");\n        };\n\n\n        const addGateValveHandlerLeft = () => {\n            const newNode = {\n                id: `${Date.now()}`,\n                data: { label: `${name}` },\n                type: \"gatevalveleft\",\n                position: {\n                    x: -10,\n                    y: 30\n                }\n            };\n            newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n            setElements((prev) => {\n                return [...prev, newNode];\n            });\n            setName(\"\");\n        };\n\n\n        // -----------------------------------\n\n        const addTextHandler = () => {\n            const newNode = {\n                id: `${Date.now()}`,\n                data: { label: `${name}` },\n                type: \"text\",\n                position: {\n                    x: 0,\n                    y: 0\n                }\n            };\n            newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n            setElements((prev) => {\n                return [...prev, newNode];\n            });\n            setName(\"\");\n        };\n\n\n\n\n        // --------------- Убрать, грубо говоря, линии с задвижки ---------------\n\n\n        const edgeUpdateHandler = (oldEdge, newConnection) =>\n            setElements((els) => updateEdge(oldEdge, newConnection, els));\n\n\n\n        // --------------- Приближении при двойном нажатии на мышь ---------------\n\n        const clickHandler = (e) => {\n            var htmlString = e.target.outerHTML.toString();\n            var index = htmlString.indexOf(` id=\"`);\n            index += 15;\n            const currentId = htmlString.substr(index, 13);\n\n            elements.forEach((_current) => {\n                if (_current.id === currentId) {\n                    setActiveNode(_current);\n                }\n            });\n            // setNewName(activeNode.data.label)\n        };\n\n\n        // --------------- Обновление текста ---------------\n\n        const updateNodeHandler = () => {\n            if (!activeNode) return;\n            setElements(\n                elements.map((_current) => {\n                    if (_current.id === activeNode.id) {\n                        return {\n                            ..._current,\n                            data: { label: newName, id: _current.data.id }\n                        };\n                    }\n\n                    return _current;\n                })\n            );\n        };\n\n        const onLoad = (reactFlowInstance) => {\n            setInstance(reactFlowInstance);\n            reactFlowInstance.fitView();\n        };\n\n\n\n\n        // --------------- Сохранение через сервер ---------------\n\n\n        // //save pos\n        // const saveChangesHandler = () => {\n        //     console.log(\"state\", instance.getElements());\n        //     //отправка json\n\n        //     localStorage.setItem('state', JSON.stringify(instance.getElements()));\n        //     var pos = JSON.stringify(instance.getElements());\n        //     socket.send(pos);\n        // };\n\n        // socket.onopen = () => {\n        //     console.log('подключено');\n        // }\n\n        // socket.onmessage = (event) => {\n        //     console.log('есть сообщение')\n        //     const dataSave = JSON.parse(JSON.stringify(event.data));\n        //     console.log(dataSave)\n        // }\n\n\n\n        // // --------------- Загрузка ---------------\n\n        // const onRestoreJson = useCallback(() => {\n        //     const restoreJson = async (event) => {\n\n        //         const flow = JSON.parse(event.data);\n\n\n        //         if (flow) {\n        //             const [x = 0, y = 0] = flow.position;\n        //             setElements(flow.elements || []);\n        //             transform({ x, y, zoom: flow.zoom || 0 });\n        //             console.log(\"Загрузка прошла\")\n        //         }\n\n\n        //         else {\n        //             console.log(\"Загрузка не прошла\")\n        //         }\n\n        //     };\n        //     restoreJson();\n        // }, [setElements, transform]\n\n        // );\n\n\n        return (\n            <div\n                style={{\n                    height: \"75vh\",\n                    width: \"75vw\",\n                    border: \"1px solid black\",\n                    marginLeft: \"14.7em\"\n                }}\n            >\n                <ReactFlow\n                    elements={elements}\n                    onElementsRemove={elementRemoveHandler}\n                    onConnect={connectHandler}\n                    deleteKeyCode={8 || 46}\n                    onEdgeUpdate={edgeUpdateHandler}\n                    nodeTypes={nodeTypes}\n                    snapToGrid={true}\n                    snapGrid={[16, 16]}\n                    connectionLineStyle={{ stroke: \"red\", type: 'step', strokeWidth: 2 }}\n                    // При двойном нажатии  на мышку приближает \n                    onDoubleClick={clickHandler}\n                    onLoad={onLoad}\n                >\n                    <Background variant=\"dots\" gap={15} size={2} color=\"#c8c8c8\" />\n\n                    <Controls />\n                </ReactFlow>\n\n                <div className='Buttons'>\n                    <input\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        type=\"text\"\n                        placeholder=\"Введите текст\"\n                    />\n\n                    <button type=\"button\" onClick={addTextHandler}>\n                        Текст\n                    </button>\n\n                    <button >\n                        <ExportCSV csvData={elements} fileName={fileName} />\n                    </button>\n\n                </div>\n\n                <div className='Buttons'>\n\n\n                    <button type=\"button\" onClick={addIndGateValveHandler} className=\"IndZadv\">\n                        <img src=\"https://cdn.discordapp.com/attachments/565406946354528268/955394073412395008/5da0c98245011949.png\" alt='Задвижка'></img>\n                    </button>\n\n                    <button type=\"button\" onClick={addGateValveHandler} className=\"Zadv\">\n                        <img src=\"https://media.discordapp.net/attachments/565406946354528268/955138797417414656/9fe81764ae11e11a.png\" alt='Задвижка'></img>\n                    </button>\n\n                    <button type=\"button\" onClick={addGateValveHandlerRight} className=\"Zadv-Right\">\n                        <img src=\"https://media.discordapp.net/attachments/565406946354528268/955147487713325096/e985402b7a23f9ac.png\" alt='Задвижка'></img>\n                    </button>\n\n                    <button type=\"button\" onClick={addGateValveHandlerBot} className=\"Zadv-Bot\">\n                        <img src=\"https://media.discordapp.net/attachments/565406946354528268/955151784907784202/a0416a67cfa4061c.png\" alt='Задвижка'></img>\n                    </button>\n\n                    <button type=\"button\" onClick={addGateValveHandlerLeft} className=\"Zadv-Left\">\n                        <img src=\"https://media.discordapp.net/attachments/565406946354528268/955153077592281190/5bf4af1de854e78a.png\" alt='Задвижка'></img>\n                    </button>\n\n                    <button type=\"button\" onClick={addRectangleHandler} className=\"Cistern\">\n                        <img src='https://media.discordapp.net/attachments/565406946354528268/955140552184180757/4f9d807774b88b0e.png' alt='Цистерна'></img>\n                    </button>\n\n\n                    <button type=\"button\" onClick={addCircleHandler} className=\"Regul\">\n                        <img src=\"https://media.discordapp.net/attachments/565406946354528268/955138925733769337/20c16b7fc40cbf81.png\" alt='Регулятор'></img>\n                    </button>\n\n                    <button type=\"button\" onClick={addFlagHandler} className=\"Flaaag\">\n                        <img src=\"https://media.discordapp.net/attachments/565406946354528268/955138926069309460/c07fc1d24613f6c7.png\" alt='Флаг'></img>\n                    </button>\n\n                    <button type=\"button\" onClick={addControlUnit} className=\"Untitled\">\n                        <img src=\"https://media.discordapp.net/attachments/565406946354528268/955141072663748659/44f946ecc1121201.png\" alt='Untitled'></img>\n                    </button>\n                </div>\n\n                <div className='Buttons'>\n                    <input\n                        value={newName}\n                        onChange={(e) => setNewName(e.target.value)}\n                        type=\"text\"\n                    />\n\n                    <button type=\"button\" onClick={updateNodeHandler}>\n                        Обновить\n                    </button>\n                </div>\n\n                <div className='Buttons'>\n\n\n\n\n                    <button type=\"button\" onClick={onRestore}>\n                        Загрузить\n                    </button>\n\n\n                    <button type='button' onClick={onSave}>\n                        Сохранить состояние\n                    </button>\n\n\n                    <button type='button' onClick={exportToJson}>\n                        Сохранить\n                    </button>\n                </div>\n\n            </div>\n        );\n            }\n    };\n\n    export default () => (\n        <ReactFlowProvider>\n            <ReactFlowRenderer />\n        </ReactFlowProvider>\n    );\n"]},"metadata":{},"sourceType":"module"}