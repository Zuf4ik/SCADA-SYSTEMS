{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438\\\\Scada-react-flow-main\\\\react-flow_test\\\\src\\\\react-flow-renderer\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { ExportCSV } from './ExportCSV ';\nimport \"./css/buttons_styles.css\";\nimport ReactFlow, { removeElements, updateEdge, addEdge, Background, Controls, ReactFlowProvider, MiniMap, useZoomPanHelper } from 'react-flow-renderer';\nimport localforage from 'localforage';\nimport { data, handleFileSelect } from 'LoadingJson';\nimport { nodeTypes } from './Nodes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = new WebSocket('ws://localhost:5000/');\nlocalforage.config({\n  name: 'react-flow-docs',\n  storeName: 'flows'\n});\n\nconst ReactFlowRenderer = () => {\n  _s();\n\n  const [elements, setElements] = useState([]); //    var views = useState([elements])\n  // ------------------- Экспорт в Excel ------------------\n\n  const fileName = 'Scada';\n  const [name, setName] = useState(\"\");\n  const [activeNode, setActiveNode] = useState();\n  const [newName, setNewName] = useState(\"\");\n  const [instance, setInstance] = useState();\n  const {\n    transform\n  } = useZoomPanHelper();\n  const flowKey = 'example-flow';\n  useEffect(() => {\n    if (activeNode) setNewName(activeNode.data.label);\n  }, [activeNode]); // --------------- Сохранение в локальном хранилище ---------------\n\n  const onSave = useCallback(() => {\n    if (instance) {\n      const flow = instance.toObject();\n      localforage.setItem(flowKey, flow);\n      console.log(\"Объекты сохранены\");\n    }\n  }, [instance]); // --------------- Загрузка ---------------\n\n  const onRestore = useCallback(() => {\n    const restoreFlow = async () => {\n      const flow = await localforage.getItem(flowKey);\n\n      if (flow) {\n        const [x = 0, y = 0] = flow.position;\n        setElements(flow.elements || []);\n        transform({\n          x,\n          y,\n          zoom: flow.zoom || 0\n        });\n      }\n    };\n\n    restoreFlow();\n  }, [setElements, transform]); // --------------- Сохранение ---------------\n\n  const exportToJson = () => {\n    let filename = \"Scada-systems.xslx\";\n    let contentType = \"application/json;charset=utf-8;\";\n\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(elements)))], {\n        type: contentType\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement('a');\n      a.download = filename;\n      a.href = 'data:' + contentType + ',' + encodeURIComponent(JSON.stringify(elements));\n      a.target = '_blank';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  }; // --------------- Удаление ---------------\n\n\n  const elementRemoveHandler = elementTobeRemoved => {\n    setElements(prev => removeElements(elementTobeRemoved, prev));\n  };\n\n  const connectHandler = params => {\n    setElements(els => addEdge({ ...params,\n      type: 'step',\n      style: {\n        stroke: 'red'\n      }\n    }, els));\n  }; // ----------------------- Добавление элементов --------------------------\n\n\n  const addRectangleHandler = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"pump\",\n      position: {\n        x: 0,\n        y: 0\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  };\n\n  const addCircleHandler = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"circle\",\n      position: {\n        x: 0,\n        y: 0\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  };\n\n  const addFlagHandler = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"flag\",\n      position: {\n        x: 0,\n        y: 0\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  };\n\n  const addControlUnit = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"controlunit\",\n      position: {\n        x: 0,\n        y: 0\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  }; // ------------------- Добавление независимой задвижки ----------------\n\n\n  const addIndGateValveHandler = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"indgatevalve\",\n      position: {\n        x: -10,\n        y: 30\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  }; // ------------------- Добавление задвижки ----------------\n\n\n  const addGateValveHandler = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"gatevalve\",\n      position: {\n        x: -10,\n        y: 30\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  };\n\n  const addGateValveHandlerRight = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"gatevalveright\",\n      position: {\n        x: -10,\n        y: 30\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  };\n\n  const addGateValveHandlerBot = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"gatevalvebot\",\n      position: {\n        x: -10,\n        y: 30\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  };\n\n  const addGateValveHandlerLeft = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"gatevalveleft\",\n      position: {\n        x: -10,\n        y: 30\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  }; // -----------------------------------\n\n\n  const addTextHandler = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"text\",\n      position: {\n        x: 0,\n        y: 0\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  }; // --------------- Убрать, грубо говоря, линии с задвижки ---------------\n\n\n  const edgeUpdateHandler = (oldEdge, newConnection) => setElements(els => updateEdge(oldEdge, newConnection, els)); // --------------- Приближении при двойном нажатии на мышь ---------------\n\n\n  const clickHandler = e => {\n    var htmlString = e.target.outerHTML.toString();\n    var index = htmlString.indexOf(` id=\"`);\n    index += 15;\n    const currentId = htmlString.substr(index, 13);\n    elements.forEach(_current => {\n      if (_current.id === currentId) {\n        setActiveNode(_current);\n      }\n    }); // setNewName(activeNode.data.label)\n  }; // --------------- Обновление текста ---------------\n\n\n  const updateNodeHandler = () => {\n    if (!activeNode) return;\n    setElements(elements.map(_current => {\n      if (_current.id === activeNode.id) {\n        return { ..._current,\n          data: {\n            label: newName,\n            id: _current.data.id\n          }\n        };\n      }\n\n      return _current;\n    }));\n  };\n\n  const onLoad = reactFlowInstance => {\n    setInstance(reactFlowInstance);\n    reactFlowInstance.fitView();\n  }; //save pos\n\n\n  const saveChangesHandler = () => {\n    console.log(\"state\", instance.getElements()); //отправка json\n\n    localStorage.setItem('state', JSON.stringify(instance.getElements()));\n    var pos = JSON.stringify(instance.getElements());\n    socket.send(pos);\n  };\n\n  socket.onopen = () => {\n    console.log('подключено');\n  };\n\n  socket.onmessage = event => {\n    console.log('есть сообщение');\n    const dataSave = JSON.parse(JSON.stringify(event.data));\n    console.log(dataSave);\n  }; // --------------- Загрузка ---------------\n\n\n  const onRestoreJson = useCallback(() => {\n    const restoreJson = async event => {\n      const flow = JSON.parse(event.data);\n\n      if (flow) {\n        const [x = 0, y = 0] = flow.position;\n        setElements(flow.elements || []);\n        transform({\n          x,\n          y,\n          zoom: flow.zoom || 0\n        });\n        console.log(\"Загрузка прошла\");\n      } else {\n        console.log(\"Загрузка не прошла\");\n      }\n    };\n\n    restoreJson();\n  }, [setElements, transform]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"75vh\",\n      width: \"75vw\",\n      border: \"1px solid black\",\n      marginLeft: \"14.7em\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      elements: elements,\n      onElementsRemove: elementRemoveHandler,\n      onConnect: connectHandler,\n      deleteKeyCode: 8 || 46,\n      onEdgeUpdate: edgeUpdateHandler,\n      nodeTypes: nodeTypes,\n      snapToGrid: true,\n      snapGrid: [16, 16],\n      connectionLineStyle: {\n        stroke: \"red\",\n        type: 'step',\n        strokeWidth: 2\n      } // При двойном нажатии  на мышку приближает \n      ,\n      onDoubleClick: clickHandler,\n      onLoad: onLoad,\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        variant: \"dots\",\n        gap: 15,\n        size: 2,\n        color: \"#c8c8c8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        onChange: e => setName(e.target.value),\n        type: \"text\",\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addTextHandler,\n        children: \"\\u0422\\u0435\\u043A\\u0441\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(ExportCSV, {\n          csvData: elements,\n          fileName: fileName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addIndGateValveHandler,\n        className: \"IndZadv\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://cdn.discordapp.com/attachments/565406946354528268/955394073412395008/5da0c98245011949.png\",\n          alt: \"\\u0417\\u0430\\u0434\\u0432\\u0438\\u0436\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addGateValveHandler,\n        className: \"Zadv\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://media.discordapp.net/attachments/565406946354528268/955138797417414656/9fe81764ae11e11a.png\",\n          alt: \"\\u0417\\u0430\\u0434\\u0432\\u0438\\u0436\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addGateValveHandlerRight,\n        className: \"Zadv-Right\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://media.discordapp.net/attachments/565406946354528268/955147487713325096/e985402b7a23f9ac.png\",\n          alt: \"\\u0417\\u0430\\u0434\\u0432\\u0438\\u0436\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addGateValveHandlerBot,\n        className: \"Zadv-Bot\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://media.discordapp.net/attachments/565406946354528268/955151784907784202/a0416a67cfa4061c.png\",\n          alt: \"\\u0417\\u0430\\u0434\\u0432\\u0438\\u0436\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addGateValveHandlerLeft,\n        className: \"Zadv-Left\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://media.discordapp.net/attachments/565406946354528268/955153077592281190/5bf4af1de854e78a.png\",\n          alt: \"\\u0417\\u0430\\u0434\\u0432\\u0438\\u0436\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addRectangleHandler,\n        className: \"Cistern\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://media.discordapp.net/attachments/565406946354528268/955140552184180757/4f9d807774b88b0e.png\",\n          alt: \"\\u0426\\u0438\\u0441\\u0442\\u0435\\u0440\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addCircleHandler,\n        className: \"Regul\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://media.discordapp.net/attachments/565406946354528268/955138925733769337/20c16b7fc40cbf81.png\",\n          alt: \"\\u0420\\u0435\\u0433\\u0443\\u043B\\u044F\\u0442\\u043E\\u0440\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addFlagHandler,\n        className: \"Flaaag\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://media.discordapp.net/attachments/565406946354528268/955138926069309460/c07fc1d24613f6c7.png\",\n          alt: \"\\u0424\\u043B\\u0430\\u0433\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addControlUnit,\n        className: \"Untitled\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://media.discordapp.net/attachments/565406946354528268/955141072663748659/44f946ecc1121201.png\",\n          alt: \"Untitled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newName,\n        onChange: e => setNewName(e.target.value),\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: updateNodeHandler,\n        children: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onRestoreJson,\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(App, {\n          type: \"\\u0424\\u0430\\u0439\\u043B\",\n          onChange: this.handleFileSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 21\n        }, this), data && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", data, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: exportToJson,\n        children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 425,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReactFlowRenderer, \"v+/j4wCYLZixhstlHiV9B4zrpeE=\", false, function () {\n  return [useZoomPanHelper];\n});\n\n_c = ReactFlowRenderer;\nexport default (() => /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n  children: /*#__PURE__*/_jsxDEV(ReactFlowRenderer, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 558,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 557,\n  columnNumber: 5\n}, this));\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactFlowRenderer\");","map":{"version":3,"sources":["E:/Загрузки/Scada-react-flow-main/react-flow_test/src/react-flow-renderer/index.jsx"],"names":["React","useState","useEffect","useCallback","ExportCSV","ReactFlow","removeElements","updateEdge","addEdge","Background","Controls","ReactFlowProvider","MiniMap","useZoomPanHelper","localforage","data","handleFileSelect","nodeTypes","socket","WebSocket","config","name","storeName","ReactFlowRenderer","elements","setElements","fileName","setName","activeNode","setActiveNode","newName","setNewName","instance","setInstance","transform","flowKey","label","onSave","flow","toObject","setItem","console","log","onRestore","restoreFlow","getItem","x","y","position","zoom","exportToJson","filename","contentType","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","JSON","stringify","type","a","document","createElement","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","elementRemoveHandler","elementTobeRemoved","prev","connectHandler","params","els","style","stroke","addRectangleHandler","newNode","id","Date","now","addCircleHandler","addFlagHandler","addControlUnit","addIndGateValveHandler","addGateValveHandler","addGateValveHandlerRight","addGateValveHandlerBot","addGateValveHandlerLeft","addTextHandler","edgeUpdateHandler","oldEdge","newConnection","clickHandler","e","htmlString","outerHTML","toString","index","indexOf","currentId","substr","forEach","_current","updateNodeHandler","map","onLoad","reactFlowInstance","fitView","saveChangesHandler","getElements","localStorage","pos","send","onopen","onmessage","event","dataSave","parse","onRestoreJson","restoreJson","height","width","border","marginLeft","strokeWidth","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { ExportCSV } from './ExportCSV ';\nimport \"./css/buttons_styles.css\"\nimport ReactFlow, {\n    removeElements,\n    updateEdge,\n    addEdge,\n    Background,\n    Controls,\n    ReactFlowProvider,\n    MiniMap,\n    useZoomPanHelper\n} from 'react-flow-renderer';\nimport localforage from 'localforage';\nimport { data, handleFileSelect } from 'LoadingJson';\nimport { nodeTypes } from './Nodes';\nconst socket = new WebSocket('ws://localhost:5000/')\n\nlocalforage.config({\n    name: 'react-flow-docs',\n    storeName: 'flows',\n});\n\n\n\n\nconst ReactFlowRenderer = () => {\n    const [elements, setElements] = useState([]);\n\n\n\n    //    var views = useState([elements])\n\n\n    // ------------------- Экспорт в Excel ------------------\n\n    const fileName = 'Scada'\n\n    const [name, setName] = useState(\"\");\n    const [activeNode, setActiveNode] = useState();\n    const [newName, setNewName] = useState(\"\");\n    const [instance, setInstance] = useState();\n    const { transform } = useZoomPanHelper();\n\n\n    const flowKey = 'example-flow';\n\n    useEffect(() => {\n        if (activeNode) setNewName(activeNode.data.label);\n    }, [activeNode]);\n\n\n    // --------------- Сохранение в локальном хранилище ---------------\n\n    const onSave = useCallback(() => {\n\n        if (instance) {\n            const flow = instance.toObject();\n            localforage.setItem(flowKey, flow);\n            console.log(\"Объекты сохранены\")\n        }\n\n    }, [instance]);\n\n\n\n    // --------------- Загрузка ---------------\n\n    const onRestore = useCallback(() => {\n        const restoreFlow = async () => {\n            const flow = await localforage.getItem(flowKey);\n\n\n            if (flow) {\n                const [x = 0, y = 0] = flow.position;\n                setElements(flow.elements || []);\n                transform({ x, y, zoom: flow.zoom || 0 });\n            }\n\n        };\n        restoreFlow();\n    }, [setElements, transform]\n\n    );\n\n    // --------------- Сохранение ---------------\n\n    const exportToJson = () => {\n        let filename = \"Scada-systems.xslx\";\n        let contentType = \"application/json;charset=utf-8;\";\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n            var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(elements)))], { type: contentType });\n            navigator.msSaveOrOpenBlob(blob, filename);\n        } else {\n            var a = document.createElement('a');\n            a.download = filename;\n            a.href = 'data:' + contentType + ',' + encodeURIComponent(JSON.stringify(elements));\n            a.target = '_blank';\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n        }\n    }\n\n\n    // --------------- Удаление ---------------\n\n\n    const elementRemoveHandler = (elementTobeRemoved) => {\n        setElements((prev) => removeElements(elementTobeRemoved, prev));\n    };\n\n\n    const connectHandler = (params) => {\n        setElements((els) =>\n            addEdge({ ...params, type: 'step', style: { stroke: 'red' } }, els))\n    };\n\n\n\n\n    // ----------------------- Добавление элементов --------------------------\n\n    const addRectangleHandler = () => {\n        const newNode = {\n            id: `${Date.now()}`,\n            data: { label: `${name}` },\n            type: \"pump\",\n            position: {\n                x: 0,\n                y: 0\n            }\n        };\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n        setElements((prev) => {\n            return [...prev, newNode];\n        });\n        setName(\"\");\n    };\n\n    const addCircleHandler = () => {\n        const newNode = {\n            id: `${Date.now()}`,\n            data: { label: `${name}` },\n            type: \"circle\",\n            position: {\n                x: 0,\n                y: 0\n            }\n        };\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n        setElements((prev) => {\n            return [...prev, newNode];\n        });\n        setName(\"\");\n    };\n\n    const addFlagHandler = () => {\n        const newNode = {\n            id: `${Date.now()}`,\n            data: { label: `${name}` },\n            type: \"flag\",\n            position: {\n                x: 0,\n                y: 0\n            }\n        };\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n        setElements((prev) => {\n            return [...prev, newNode];\n        });\n        setName(\"\");\n    };\n\n\n    const addControlUnit = () => {\n        const newNode = {\n            id: `${Date.now()}`,\n            data: { label: `${name}` },\n            type: \"controlunit\",\n            position: {\n                x: 0,\n                y: 0\n            }\n        };\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n        setElements((prev) => {\n            return [...prev, newNode];\n        });\n        setName(\"\");\n    };\n\n\n    // ------------------- Добавление независимой задвижки ----------------\n\n    const addIndGateValveHandler = () => {\n        const newNode = {\n            id: `${Date.now()}`,\n            data: { label: `${name}` },\n            type: \"indgatevalve\",\n            position: {\n                x: -10,\n                y: 30\n            }\n        };\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n        setElements((prev) => {\n            return [...prev, newNode];\n        });\n        setName(\"\");\n    };\n\n\n    // ------------------- Добавление задвижки ----------------\n\n    const addGateValveHandler = () => {\n        const newNode = {\n            id: `${Date.now()}`,\n            data: { label: `${name}` },\n            type: \"gatevalve\",\n            position: {\n                x: -10,\n                y: 30\n            }\n        };\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n        setElements((prev) => {\n            return [...prev, newNode];\n        });\n        setName(\"\");\n    };\n\n\n    const addGateValveHandlerRight = () => {\n        const newNode = {\n            id: `${Date.now()}`,\n            data: { label: `${name}` },\n            type: \"gatevalveright\",\n            position: {\n                x: -10,\n                y: 30\n            }\n        };\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n        setElements((prev) => {\n            return [...prev, newNode];\n        });\n        setName(\"\");\n    };\n\n\n    const addGateValveHandlerBot = () => {\n        const newNode = {\n            id: `${Date.now()}`,\n            data: { label: `${name}` },\n            type: \"gatevalvebot\",\n            position: {\n                x: -10,\n                y: 30\n            }\n        };\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n        setElements((prev) => {\n            return [...prev, newNode];\n        });\n        setName(\"\");\n    };\n\n\n    const addGateValveHandlerLeft = () => {\n        const newNode = {\n            id: `${Date.now()}`,\n            data: { label: `${name}` },\n            type: \"gatevalveleft\",\n            position: {\n                x: -10,\n                y: 30\n            }\n        };\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n        setElements((prev) => {\n            return [...prev, newNode];\n        });\n        setName(\"\");\n    };\n\n\n    // -----------------------------------\n\n    const addTextHandler = () => {\n        const newNode = {\n            id: `${Date.now()}`,\n            data: { label: `${name}` },\n            type: \"text\",\n            position: {\n                x: 0,\n                y: 0\n            }\n        };\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n        setElements((prev) => {\n            return [...prev, newNode];\n        });\n        setName(\"\");\n    };\n\n\n\n\n    // --------------- Убрать, грубо говоря, линии с задвижки ---------------\n\n\n    const edgeUpdateHandler = (oldEdge, newConnection) =>\n        setElements((els) => updateEdge(oldEdge, newConnection, els));\n\n\n\n    // --------------- Приближении при двойном нажатии на мышь ---------------\n\n    const clickHandler = (e) => {\n        var htmlString = e.target.outerHTML.toString();\n        var index = htmlString.indexOf(` id=\"`);\n        index += 15;\n        const currentId = htmlString.substr(index, 13);\n\n        elements.forEach((_current) => {\n            if (_current.id === currentId) {\n                setActiveNode(_current);\n            }\n        });\n        // setNewName(activeNode.data.label)\n    };\n\n\n    // --------------- Обновление текста ---------------\n\n    const updateNodeHandler = () => {\n        if (!activeNode) return;\n        setElements(\n            elements.map((_current) => {\n                if (_current.id === activeNode.id) {\n                    return {\n                        ..._current,\n                        data: { label: newName, id: _current.data.id }\n                    };\n                }\n\n                return _current;\n            })\n        );\n    };\n\n    const onLoad = (reactFlowInstance) => {\n        setInstance(reactFlowInstance);\n        reactFlowInstance.fitView();\n    };\n\n\n\n\n\n    //save pos\n    const saveChangesHandler = () => {\n        console.log(\"state\", instance.getElements());\n        //отправка json\n\n        localStorage.setItem('state', JSON.stringify(instance.getElements()));\n        var pos = JSON.stringify(instance.getElements());\n        socket.send(pos);\n    };\n\n    socket.onopen = () => {\n        console.log('подключено');\n    }\n\n    socket.onmessage = (event) => {\n        console.log('есть сообщение')\n        const dataSave = JSON.parse(JSON.stringify(event.data));\n        console.log(dataSave)\n    }\n\n\n\n    // --------------- Загрузка ---------------\n\n    const onRestoreJson = useCallback(() => {\n        const restoreJson = async (event) => {\n\n            const flow = JSON.parse(event.data);\n\n\n            if (flow) {\n                const [x = 0, y = 0] = flow.position;\n                setElements(flow.elements || []);\n                transform({ x, y, zoom: flow.zoom || 0 });\n                console.log(\"Загрузка прошла\")\n            }\n\n\n            else {\n                console.log(\"Загрузка не прошла\")\n            }\n\n        };\n        restoreJson();\n    }, [setElements, transform]\n\n    );\n\n\n\n\n\n    return (\n        <div\n            style={{\n                height: \"75vh\",\n                width: \"75vw\",\n                border: \"1px solid black\",\n                marginLeft: \"14.7em\"\n            }}\n        >\n            <ReactFlow\n                elements={elements}\n                onElementsRemove={elementRemoveHandler}\n                onConnect={connectHandler}\n                deleteKeyCode={8 || 46}\n                onEdgeUpdate={edgeUpdateHandler}\n                nodeTypes={nodeTypes}\n                snapToGrid={true}\n                snapGrid={[16, 16]}\n                connectionLineStyle={{ stroke: \"red\", type: 'step', strokeWidth: 2 }}\n                // При двойном нажатии  на мышку приближает \n                onDoubleClick={clickHandler}\n                onLoad={onLoad}\n            >\n                <Background variant=\"dots\" gap={15} size={2} color=\"#c8c8c8\" />\n\n                <Controls />\n            </ReactFlow>\n\n            <div className='Buttons'>\n                <input\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    type=\"text\"\n                    placeholder=\"Введите текст\"\n                />\n\n                <button type=\"button\" onClick={addTextHandler}>\n                    Текст\n                </button>\n\n                <button >\n                    <ExportCSV csvData={elements} fileName={fileName} />\n                </button>\n\n            </div>\n\n            <div className='Buttons'>\n\n\n                <button type=\"button\" onClick={addIndGateValveHandler} className=\"IndZadv\">\n                    <img src=\"https://cdn.discordapp.com/attachments/565406946354528268/955394073412395008/5da0c98245011949.png\" alt='Задвижка'></img>\n                </button>\n\n                <button type=\"button\" onClick={addGateValveHandler} className=\"Zadv\">\n                    <img src=\"https://media.discordapp.net/attachments/565406946354528268/955138797417414656/9fe81764ae11e11a.png\" alt='Задвижка'></img>\n                </button>\n\n                <button type=\"button\" onClick={addGateValveHandlerRight} className=\"Zadv-Right\">\n                    <img src=\"https://media.discordapp.net/attachments/565406946354528268/955147487713325096/e985402b7a23f9ac.png\" alt='Задвижка'></img>\n                </button>\n\n                <button type=\"button\" onClick={addGateValveHandlerBot} className=\"Zadv-Bot\">\n                    <img src=\"https://media.discordapp.net/attachments/565406946354528268/955151784907784202/a0416a67cfa4061c.png\" alt='Задвижка'></img>\n                </button>\n\n                <button type=\"button\" onClick={addGateValveHandlerLeft} className=\"Zadv-Left\">\n                    <img src=\"https://media.discordapp.net/attachments/565406946354528268/955153077592281190/5bf4af1de854e78a.png\" alt='Задвижка'></img>\n                </button>\n\n                <button type=\"button\" onClick={addRectangleHandler} className=\"Cistern\">\n                    <img src='https://media.discordapp.net/attachments/565406946354528268/955140552184180757/4f9d807774b88b0e.png' alt='Цистерна'></img>\n                </button>\n\n\n                <button type=\"button\" onClick={addCircleHandler} className=\"Regul\">\n                    <img src=\"https://media.discordapp.net/attachments/565406946354528268/955138925733769337/20c16b7fc40cbf81.png\" alt='Регулятор'></img>\n                </button>\n\n                <button type=\"button\" onClick={addFlagHandler} className=\"Flaaag\">\n                    <img src=\"https://media.discordapp.net/attachments/565406946354528268/955138926069309460/c07fc1d24613f6c7.png\" alt='Флаг'></img>\n                </button>\n\n                <button type=\"button\" onClick={addControlUnit} className=\"Untitled\">\n                    <img src=\"https://media.discordapp.net/attachments/565406946354528268/955141072663748659/44f946ecc1121201.png\" alt='Untitled'></img>\n                </button>\n            </div>\n\n            <div className='Buttons'>\n                <input\n                    value={newName}\n                    onChange={(e) => setNewName(e.target.value)}\n                    type=\"text\"\n                />\n\n                <button type=\"button\" onClick={updateNodeHandler}>\n                    Обновить\n                </button>\n            </div>\n\n            <div className='Buttons'>\n\n\n                <button type=\"button\" onClick={onRestoreJson}>\n                    Загрузить\n                </button>\n\n                <div >\n                    <App type=\"Файл\" onChange={this.handleFileSelect} />\n                    {data && <p> {data} </p>}\n                </div>\n\n                {/* // Сохранение            */}\n\n                {/* <a\n                    href={`data:text/json;charset=utf-8,${encodeURIComponent(\n                        JSON.stringify(elements)\n                    )}`}\n                    download=\"filename.json\"\n                >\n                    {`Download Json`}\n                </a> */}\n\n\n                <button type='button' onClick={exportToJson}>\n                    Сохранить\n                </button>\n            </div>\n\n        </div>\n    );\n};\n\nexport default () => (\n    <ReactFlowProvider>\n        <ReactFlowRenderer />\n    </ReactFlowProvider>\n);\n"]},"metadata":{},"sourceType":"module"}