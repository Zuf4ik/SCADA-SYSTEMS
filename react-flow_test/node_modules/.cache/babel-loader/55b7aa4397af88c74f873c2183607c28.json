{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u041F\\u0420\\u0410\\u041A\\u0422\\u0418\\u041A\\u0410\\\\React\\\\react-flow\\\\react-flow_test\\\\src\\\\react-flow-renderer\\\\ExportCSV .jsx\";\nimport React from 'react';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ExportCSV = _ref => {\n  let {\n    csvData,\n    fileName\n  } = _ref;\n  const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n  const fileExtension = '.xlsx';\n\n  const exportToCSV = (csvData, fileName) => {\n    const ws = XLSX.utils.json_to_sheet(csvData);\n    const wb = {\n      Sheets: {\n        'Данные': ws\n      },\n      SheetNames: ['Данные']\n    };\n    const excelBuffer = XLSX.write(wb, {\n      bookType: 'xlsx',\n      type: 'array'\n    });\n    const data = new Blob([excelBuffer], {\n      type: fileType\n    });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: e => exportToCSV(csvData, fileName),\n    children: \"\\u042D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442 \\u0432 Excel\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_c = ExportCSV;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExportCSV\");","map":{"version":3,"sources":["E:/ПРАКТИКА/React/react-flow/react-flow_test/src/react-flow-renderer/ExportCSV .jsx"],"names":["React","FileSaver","XLSX","ExportCSV","csvData","fileName","fileType","fileExtension","exportToCSV","ws","utils","json_to_sheet","wb","Sheets","SheetNames","excelBuffer","write","bookType","type","data","Blob","saveAs","e"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AAEA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;;AAIA,OAAO,MAAMC,SAAS,GAAG,QAAyB;AAAA,MAAxB;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAwB;AAI9C,QAAMC,QAAQ,GAAG,iFAAjB;AAEA,QAAMC,aAAa,GAAG,OAAtB;;AAIA,QAAMC,WAAW,GAAG,CAACJ,OAAD,EAAUC,QAAV,KAAuB;AAEvC,UAAMI,EAAE,GAAGP,IAAI,CAACQ,KAAL,CAAWC,aAAX,CAAyBP,OAAzB,CAAX;AAEA,UAAMQ,EAAE,GAAG;AAAEC,MAAAA,MAAM,EAAE;AAAE,kBAAUJ;AAAZ,OAAV;AAA4BK,MAAAA,UAAU,EAAE,CAAC,QAAD;AAAxC,KAAX;AAEA,UAAMC,WAAW,GAAGb,IAAI,CAACc,KAAL,CAAWJ,EAAX,EAAe;AAAEK,MAAAA,QAAQ,EAAE,MAAZ;AAAoBC,MAAAA,IAAI,EAAE;AAA1B,KAAf,CAApB;AAEA,UAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACL,WAAD,CAAT,EAAwB;AAACG,MAAAA,IAAI,EAAEZ;AAAP,KAAxB,CAAb;AAEAL,IAAAA,SAAS,CAACoB,MAAV,CAAiBF,IAAjB,EAAuBd,QAAQ,GAAGE,aAAlC;AAEH,GAZD;;AAgBA,sBAEI;AAAS,IAAA,OAAO,EAAGe,CAAD,IAAOd,WAAW,CAACJ,OAAD,EAASC,QAAT,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAMH,CAhCM;KAAMF,S","sourcesContent":["import React from 'react'\r\n\r\nimport * as FileSaver from 'file-saver';\r\n\r\nimport * as XLSX from 'xlsx';\r\n\r\n\r\n\r\nexport const ExportCSV = ({csvData, fileName}) => {\r\n\r\n\r\n\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n\r\n    const fileExtension = '.xlsx';\r\n\r\n\r\n\r\n    const exportToCSV = (csvData, fileName) => {\r\n\r\n        const ws = XLSX.utils.json_to_sheet(csvData);\r\n\r\n        const wb = { Sheets: { 'Данные': ws }, SheetNames: ['Данные'] };\r\n\r\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n\r\n        const data = new Blob([excelBuffer], {type: fileType});\r\n\r\n        FileSaver.saveAs(data, fileName + fileExtension);\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <button  onClick={(e) => exportToCSV(csvData,fileName)}>Экспорт в Excel</button>\r\n\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}