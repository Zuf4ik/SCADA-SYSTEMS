{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438\\\\Scada-react-flow--main\\\\react-flow_test\\\\src\\\\react-flow-renderer\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react'; // ------------------------- Удалить -------------------------\n\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Typography from '@mui/material/Typography'; // -------------------------------------------\n\nimport { ExportCSV } from './ExportCSV ';\nimport \"./buttons styles.css\"; // import { Tooltip } from '@mui/material';\n\nimport ReactFlow, { removeElements, updateEdge, addEdge, Background, // MiniMap,\nControls, StepEdge } from 'react-flow-renderer';\nimport { nodeTypes } from './Nodes';\nimport styleConnect from './style-connect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = new WebSocket('ws://localhost:5000/');\n\nconst ReactFlowRenderer = () => {\n  _s();\n\n  const [elements, setElements] = useState([styleConnect]); // ------------------- Экспорт в Excel ------------------\n\n  const fileName = 'Scada';\n  const [name, setName] = useState(\"\");\n  const [activeNode, setActiveNode] = useState();\n  const [newName, setNewName] = useState(\"\");\n  const [instance, setInstance] = useState();\n  useEffect(() => {\n    if (activeNode) setNewName(activeNode.data.label);\n  }, [activeNode]);\n\n  const connectHandler = params => {\n    setElements(els => addEdge({ ...params,\n      type: 'smoothstep',\n      style: {\n        stroke: '#f00'\n      }\n    }, els));\n  }; // ----------------------- Сохранение состояние страницы -------------------------- \n\n\n  const onConnect = useCallback(params => StepEdges(eds => addEdge(params, eds)), [setEdges]);\n  const onSave = useCallback(() => {\n    if (rfInstance) {\n      const flow = rfInstance.toObject();\n      localStorage.setItem(flowKey, JSON.stringify(flow));\n    }\n  }, [rfInstance]);\n  const OnRestore = useCallback(() => {\n    const reactFlow = async () => {\n      const flow = JSON.parse(localStorage.getItem(flowKey));\n\n      if (flow) {\n        const {\n          position\n        } = flow.viewport;\n        setNodes(flow.nodes || []);\n        setEdges(flow.edges || []);\n      }\n    };\n\n    reactFlow();\n    [setNodes];\n  }); // ----------------------- Добавление элементов --------------------------\n\n  const addRectangleHandler = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"rectangle\",\n      position: {\n        x: 0,\n        y: 0\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  };\n\n  const addCircleHandler = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"circle\",\n      position: {\n        x: 0,\n        y: 0\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  };\n\n  const addFlagHandler = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"flag\",\n      position: {\n        x: 0,\n        y: 0\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  };\n\n  const addControlUnit = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"controlunit\",\n      position: {\n        x: 0,\n        y: 0\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  }; // ------------------- Добавление независимой задвижки ----------------\n\n\n  const addIndGateValveHandler = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"indgatevalve\",\n      position: {\n        x: -10,\n        y: 30\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  }; // ------------------- Добавление задвижки ----------------\n\n\n  const addGateValveHandler = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"gatevalve\",\n      position: {\n        x: -10,\n        y: 30\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  };\n\n  const addGateValveHandlerRight = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"gatevalveright\",\n      position: {\n        x: -10,\n        y: 30\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  };\n\n  const addGateValveHandlerBot = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"gatevalvebot\",\n      position: {\n        x: -10,\n        y: 30\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  };\n\n  const addGateValveHandlerLeft = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"gatevalveleft\",\n      position: {\n        x: -10,\n        y: 30\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  }; // -----------------------------------\n\n\n  const addTextHandler = () => {\n    const newNode = {\n      id: `${Date.now()}`,\n      data: {\n        label: `${name}`\n      },\n      type: \"text\",\n      position: {\n        x: 0,\n        y: 0\n      }\n    };\n    newNode.data = { ...newNode.data,\n      id: `${newNode.id}`\n    };\n    setElements(prev => {\n      return [...prev, newNode];\n    });\n    setName(\"\");\n  }; // --------------- Убрать, грубо говоря, линии с задвижки ---------------\n\n\n  const edgeUpdateHandler = (oldEdge, newConnection) => setElements(els => updateEdge(oldEdge, newConnection, els)); // --------------- Приближении при двойном нажатии на мышь ---------------\n\n\n  const clickHandler = e => {\n    var htmlString = e.target.outerHTML.toString();\n    var index = htmlString.indexOf(` id=\"`);\n    index += 15;\n    const currentId = htmlString.substr(index, 13);\n    elements.forEach(_current => {\n      if (_current.id === currentId) {\n        setActiveNode(_current);\n      }\n    }); // setNewName(activeNode.data.label)\n  }; // --------------- Удаление ---------------\n\n\n  const deleteNode = id => {\n    if (elements[id] !== undefined || id === 'onElementsRemove') {\n      setElements(els => removeElements([elements[id]], els));\n    } else {\n      elements[id] = function (event) {\n        console.log(event);\n      };\n    }\n  }; // --------------- Обновление текста ---------------\n\n\n  const updateNodeHandler = () => {\n    if (!activeNode) return;\n    setElements(elements.map(_current => {\n      if (_current.id === activeNode.id) {\n        return { ..._current,\n          data: {\n            label: newName,\n            id: _current.data.id\n          }\n        };\n      }\n\n      return _current;\n    }));\n  };\n\n  const onLoad = reactFlowInstance => {\n    setInstance(reactFlowInstance);\n    reactFlowInstance.fitView();\n  }; //save pos\n\n\n  const saveChangesHandler = () => {\n    console.log(\"state\", instance.getElements()); //отправка json\n\n    localStorage.setItem('state', JSON.stringify(instance.getElements()));\n    var pos = JSON.stringify(instance.getElements());\n    socket.send(pos);\n  };\n\n  socket.onopen = () => {\n    console.log('подключено');\n  };\n\n  socket.onmessage = event => {\n    console.log('есть сообщение', event.data);\n  }; // Модальное окно\n\n\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 600,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4\n  };\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"75vh\",\n      width: \"75vw\",\n      border: \"1px solid black\",\n      marginLeft: \"12.5vw\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      elements: elements,\n      onElementsRemove: deleteNode,\n      onConnect: connectHandler,\n      deleteKeyCode: 8 || 46,\n      onEdgeUpdate: edgeUpdateHandler,\n      nodeTypes: nodeTypes,\n      snapToGrid: true,\n      snapGrid: [16, 16],\n      connectionLineStyle: {\n        stroke: \"red\",\n        strokeWidth: 2\n      } // При двойном нажатии  на мышку приближает \n      ,\n      onDoubleClick: clickHandler,\n      onLoad: onLoad,\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        variant: \"dots\",\n        gap: 15,\n        size: 2,\n        color: \"#c8c8c8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        onChange: e => setName(e.target.value),\n        type: \"text\",\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addTextHandler,\n        children: \"\\u0422\\u0435\\u043A\\u0441\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => deleteNode(0),\n        children: \"\\u0423\\u0434\\u0430\\u043B\\u0435\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(ExportCSV, {\n          csvData: elements,\n          fileName: fileName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleOpen,\n        children: \"\\u0421\\u043F\\u0440\\u0430\\u0432\\u043A\\u0430 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        keepMounted: true,\n        open: open,\n        onClose: handleClose,\n        \"aria-labelledby\": \"keep-mounted-modal-title\",\n        \"aria-describedby\": \"keep-mounted-modal-description\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: style,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            id: \"keep-mounted-modal-title\",\n            variant: \"h65\",\n            component: \"h1\",\n            align: \"center\",\n            children: \"\\u0421\\u043F\\u0440\\u0430\\u0432\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            id: \"keep-mounted-modal-description\",\n            variant: \"h6\",\n            component: \"h2\",\n            sx: {\n              mt: 2\n            },\n            children: \"1)  \\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0441\\u0445\\u0435\\u043C\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            id: \"keep-mounted-modal-description\",\n            variant: \"h6\",\n            component: \"h2\",\n            sx: {\n              mt: 1\n            },\n            children: \"\\u0414\\u043B\\u044F \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0441\\u0445\\u0435\\u043C\\u044B, \\u043D\\u0435\\u043E\\u0431\\u0445\\u043E\\u0434\\u0438\\u043C\\u043E \\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C, \\u043D\\u0443\\u0436\\u043D\\u044B\\u0435 \\u043E\\u0431\\u044A\\u0435\\u043A\\u0442\\u044B, \\u043F\\u0443\\u0442\\u0435\\u043C \\u043D\\u0430\\u0436\\u0430\\u0442\\u0438\\u044F \\u043D\\u0430 \\u043A\\u043D\\u043E\\u043F\\u043A\\u0438 \\u0434\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F. \\u0417\\u0430\\u0442\\u0435\\u043C \\u0440\\u0430\\u0437\\u043C\\u0435\\u0441\\u0442\\u0438\\u0442\\u044C \\u043E\\u0431\\u044A\\u0435\\u043A\\u0442\\u044B, \\u0442\\u0430\\u043A \\u043A\\u0430\\u043A \\u043D\\u0443\\u0436\\u043D\\u043E \\u0438 \\u0441\\u043E\\u0435\\u0434\\u0438\\u043D\\u0438\\u0442\\u044C \\u0438\\u0445\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addIndGateValveHandler,\n        className: \"IndZadv\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://cdn.discordapp.com/attachments/565406946354528268/955394073412395008/5da0c98245011949.png\",\n          alt: \"\\u0417\\u0430\\u0434\\u0432\\u0438\\u0436\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addGateValveHandler,\n        className: \"Zadv\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://media.discordapp.net/attachments/565406946354528268/955138797417414656/9fe81764ae11e11a.png\",\n          alt: \"\\u0417\\u0430\\u0434\\u0432\\u0438\\u0436\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addGateValveHandlerRight,\n        className: \"Zadv-Right\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://media.discordapp.net/attachments/565406946354528268/955147487713325096/e985402b7a23f9ac.png\",\n          alt: \"\\u0417\\u0430\\u0434\\u0432\\u0438\\u0436\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addGateValveHandlerBot,\n        className: \"Zadv-Bot\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://media.discordapp.net/attachments/565406946354528268/955151784907784202/a0416a67cfa4061c.png\",\n          alt: \"\\u0417\\u0430\\u0434\\u0432\\u0438\\u0436\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addGateValveHandlerLeft,\n        className: \"Zadv-Left\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://media.discordapp.net/attachments/565406946354528268/955153077592281190/5bf4af1de854e78a.png\",\n          alt: \"\\u0417\\u0430\\u0434\\u0432\\u0438\\u0436\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addRectangleHandler,\n        className: \"Cistern\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://media.discordapp.net/attachments/565406946354528268/955140552184180757/4f9d807774b88b0e.png\",\n          alt: \"\\u0426\\u0438\\u0441\\u0442\\u0435\\u0440\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addCircleHandler,\n        className: \"Regul\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://media.discordapp.net/attachments/565406946354528268/955138925733769337/20c16b7fc40cbf81.png\",\n          alt: \"\\u0420\\u0435\\u0433\\u0443\\u043B\\u044F\\u0442\\u043E\\u0440\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addFlagHandler,\n        className: \"Flaaag\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://media.discordapp.net/attachments/565406946354528268/955138926069309460/c07fc1d24613f6c7.png\",\n          alt: \"\\u0424\\u043B\\u0430\\u0433\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addControlUnit,\n        className: \"Untitled\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://media.discordapp.net/attachments/565406946354528268/955141072663748659/44f946ecc1121201.png\",\n          alt: \"Untitled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newName,\n        onChange: e => setNewName(e.target.value),\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: updateNodeHandler,\n        children: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: saveChangesHandler,\n        children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 375,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReactFlowRenderer, \"mBAS6Y7qZ771NwOdcPFzsFjr75Y=\");\n\n_c = ReactFlowRenderer;\nexport default ReactFlowRenderer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactFlowRenderer\");","map":{"version":3,"sources":["E:/Загрузки/Scada-react-flow--main/react-flow_test/src/react-flow-renderer/index.jsx"],"names":["React","useState","useEffect","useCallback","Box","Modal","Typography","ExportCSV","ReactFlow","removeElements","updateEdge","addEdge","Background","Controls","StepEdge","nodeTypes","styleConnect","socket","WebSocket","ReactFlowRenderer","elements","setElements","fileName","name","setName","activeNode","setActiveNode","newName","setNewName","instance","setInstance","data","label","connectHandler","params","els","type","style","stroke","onConnect","StepEdges","eds","setEdges","onSave","rfInstance","flow","toObject","localStorage","setItem","flowKey","JSON","stringify","OnRestore","reactFlow","parse","getItem","position","viewport","setNodes","nodes","edges","addRectangleHandler","newNode","id","Date","now","x","y","prev","addCircleHandler","addFlagHandler","addControlUnit","addIndGateValveHandler","addGateValveHandler","addGateValveHandlerRight","addGateValveHandlerBot","addGateValveHandlerLeft","addTextHandler","edgeUpdateHandler","oldEdge","newConnection","clickHandler","e","htmlString","target","outerHTML","toString","index","indexOf","currentId","substr","forEach","_current","deleteNode","undefined","event","console","log","updateNodeHandler","map","onLoad","reactFlowInstance","fitView","saveChangesHandler","getElements","pos","send","onopen","onmessage","top","left","transform","width","bgcolor","border","boxShadow","p","open","setOpen","handleOpen","handleClose","height","marginLeft","strokeWidth","value","mt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD,C,CACA;;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB,C,CACA;;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAO,sBAAP,C,CACA;;AACA,OAAOC,SAAP,IACIC,cADJ,EAEIC,UAFJ,EAGIC,OAHJ,EAIIC,UAJJ,EAMI;AACAC,QAPJ,EAQIC,QARJ,QASO,qBATP;AAWA,SAASC,SAAT,QAA0B,SAA1B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;;AACA,MAAMC,MAAM,GAAG,IAAIC,SAAJ,CAAc,sBAAd,CAAf;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,CAACe,YAAD,CAAD,CAAxC,CAD4B,CAG5B;;AAEA,QAAMM,QAAQ,GAAG,OAAjB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACwB,UAAD,EAAaC,aAAb,IAA8BzB,QAAQ,EAA5C;AACA,QAAM,CAAC0B,OAAD,EAAUC,UAAV,IAAwB3B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC4B,QAAD,EAAWC,WAAX,IAA0B7B,QAAQ,EAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIuB,UAAJ,EAAgBG,UAAU,CAACH,UAAU,CAACM,IAAX,CAAgBC,KAAjB,CAAV;AACnB,GAFQ,EAEN,CAACP,UAAD,CAFM,CAAT;;AAMA,QAAMQ,cAAc,GAAIC,MAAD,IAAY;AAC/Bb,IAAAA,WAAW,CAAEc,GAAD,IACRxB,OAAO,CAAC,EAAE,GAAGuB,MAAL;AAAaE,MAAAA,IAAI,EAAE,YAAnB;AAAiCC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV;AAAxC,KAAD,EAA8DH,GAA9D,CADA,CAAX;AAEH,GAHD,CAjB4B,CAuB7B;;;AAGC,QAAMI,SAAS,GAAGpC,WAAW,CAAE+B,MAAD,IAAYM,SAAS,CAAEC,GAAD,IAAS9B,OAAO,CAACuB,MAAD,EAASO,GAAT,CAAjB,CAAtB,EAAuD,CAACC,QAAD,CAAvD,CAA7B;AACA,QAAMC,MAAM,GAAGxC,WAAW,CAAE,MAAM;AAC9B,QAAGyC,UAAH,EAAe;AACX,YAAMC,IAAI,GAAGD,UAAU,CAACE,QAAX,EAAb;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqBC,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAA9B;AACH;AACJ,GALyB,EAKvB,CAACD,UAAD,CALuB,CAA1B;AAOA,QAAMQ,SAAS,GAAGjD,WAAW,CAAC,MAAM;AAChC,UAAMkD,SAAS,GAAG,YAAY;AAC1B,YAAMR,IAAI,GAAGK,IAAI,CAACI,KAAL,CAAWP,YAAY,CAACQ,OAAb,CAAqBN,OAArB,CAAX,CAAb;;AAEA,UAAIJ,IAAJ,EAAS;AACL,cAAM;AAACW,UAAAA;AAAD,YAAaX,IAAI,CAACY,QAAxB;AACAC,QAAAA,QAAQ,CAACb,IAAI,CAACc,KAAL,IAAc,EAAf,CAAR;AACAjB,QAAAA,QAAQ,CAACG,IAAI,CAACe,KAAL,IAAc,EAAf,CAAR;AACH;AACJ,KARD;;AASAP,IAAAA,SAAS;AACT,KAACK,QAAD;AACH,GAZ4B,CAA7B,CAlC4B,CAiD5B;;AAEA,QAAMG,mBAAmB,GAAG,MAAM;AAC9B,UAAMC,OAAO,GAAG;AACZC,MAAAA,EAAE,EAAG,GAAEC,IAAI,CAACC,GAAL,EAAW,EADN;AAEZlC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAG,GAAET,IAAK;AAAjB,OAFM;AAGZa,MAAAA,IAAI,EAAE,WAHM;AAIZoB,MAAAA,QAAQ,EAAE;AACNU,QAAAA,CAAC,EAAE,CADG;AAENC,QAAAA,CAAC,EAAE;AAFG;AAJE,KAAhB;AASAL,IAAAA,OAAO,CAAC/B,IAAR,GAAe,EAAE,GAAG+B,OAAO,CAAC/B,IAAb;AAAmBgC,MAAAA,EAAE,EAAG,GAAED,OAAO,CAACC,EAAG;AAArC,KAAf;AAEA1C,IAAAA,WAAW,CAAE+C,IAAD,IAAU;AAClB,aAAO,CAAC,GAAGA,IAAJ,EAAUN,OAAV,CAAP;AACH,KAFU,CAAX;AAGAtC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAhBD;;AAkBA,QAAM6C,gBAAgB,GAAG,MAAM;AAC3B,UAAMP,OAAO,GAAG;AACZC,MAAAA,EAAE,EAAG,GAAEC,IAAI,CAACC,GAAL,EAAW,EADN;AAEZlC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAG,GAAET,IAAK;AAAjB,OAFM;AAGZa,MAAAA,IAAI,EAAE,QAHM;AAIZoB,MAAAA,QAAQ,EAAE;AACNU,QAAAA,CAAC,EAAE,CADG;AAENC,QAAAA,CAAC,EAAE;AAFG;AAJE,KAAhB;AASAL,IAAAA,OAAO,CAAC/B,IAAR,GAAe,EAAE,GAAG+B,OAAO,CAAC/B,IAAb;AAAmBgC,MAAAA,EAAE,EAAG,GAAED,OAAO,CAACC,EAAG;AAArC,KAAf;AAEA1C,IAAAA,WAAW,CAAE+C,IAAD,IAAU;AAClB,aAAO,CAAC,GAAGA,IAAJ,EAAUN,OAAV,CAAP;AACH,KAFU,CAAX;AAGAtC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAhBD;;AAkBA,QAAM8C,cAAc,GAAG,MAAM;AACzB,UAAMR,OAAO,GAAG;AACZC,MAAAA,EAAE,EAAG,GAAEC,IAAI,CAACC,GAAL,EAAW,EADN;AAEZlC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAG,GAAET,IAAK;AAAjB,OAFM;AAGZa,MAAAA,IAAI,EAAE,MAHM;AAIZoB,MAAAA,QAAQ,EAAE;AACNU,QAAAA,CAAC,EAAE,CADG;AAENC,QAAAA,CAAC,EAAE;AAFG;AAJE,KAAhB;AASAL,IAAAA,OAAO,CAAC/B,IAAR,GAAe,EAAE,GAAG+B,OAAO,CAAC/B,IAAb;AAAmBgC,MAAAA,EAAE,EAAG,GAAED,OAAO,CAACC,EAAG;AAArC,KAAf;AAEA1C,IAAAA,WAAW,CAAE+C,IAAD,IAAU;AAClB,aAAO,CAAC,GAAGA,IAAJ,EAAUN,OAAV,CAAP;AACH,KAFU,CAAX;AAGAtC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAhBD;;AAmBA,QAAM+C,cAAc,GAAG,MAAM;AACzB,UAAMT,OAAO,GAAG;AACZC,MAAAA,EAAE,EAAG,GAAEC,IAAI,CAACC,GAAL,EAAW,EADN;AAEZlC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAG,GAAET,IAAK;AAAjB,OAFM;AAGZa,MAAAA,IAAI,EAAE,aAHM;AAIZoB,MAAAA,QAAQ,EAAE;AACNU,QAAAA,CAAC,EAAE,CADG;AAENC,QAAAA,CAAC,EAAE;AAFG;AAJE,KAAhB;AASAL,IAAAA,OAAO,CAAC/B,IAAR,GAAe,EAAE,GAAG+B,OAAO,CAAC/B,IAAb;AAAmBgC,MAAAA,EAAE,EAAG,GAAED,OAAO,CAACC,EAAG;AAArC,KAAf;AAEA1C,IAAAA,WAAW,CAAE+C,IAAD,IAAU;AAClB,aAAO,CAAC,GAAGA,IAAJ,EAAUN,OAAV,CAAP;AACH,KAFU,CAAX;AAGAtC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAhBD,CA1G4B,CA6H5B;;;AAEA,QAAMgD,sBAAsB,GAAG,MAAM;AACjC,UAAMV,OAAO,GAAG;AACZC,MAAAA,EAAE,EAAG,GAAEC,IAAI,CAACC,GAAL,EAAW,EADN;AAEZlC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAG,GAAET,IAAK;AAAjB,OAFM;AAGZa,MAAAA,IAAI,EAAE,cAHM;AAIZoB,MAAAA,QAAQ,EAAE;AACNU,QAAAA,CAAC,EAAE,CAAC,EADE;AAENC,QAAAA,CAAC,EAAE;AAFG;AAJE,KAAhB;AASAL,IAAAA,OAAO,CAAC/B,IAAR,GAAe,EAAE,GAAG+B,OAAO,CAAC/B,IAAb;AAAmBgC,MAAAA,EAAE,EAAG,GAAED,OAAO,CAACC,EAAG;AAArC,KAAf;AAEA1C,IAAAA,WAAW,CAAE+C,IAAD,IAAU;AAClB,aAAO,CAAC,GAAGA,IAAJ,EAAUN,OAAV,CAAP;AACH,KAFU,CAAX;AAGAtC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAhBD,CA/H4B,CAkJ5B;;;AAEA,QAAMiD,mBAAmB,GAAG,MAAM;AAC9B,UAAMX,OAAO,GAAG;AACZC,MAAAA,EAAE,EAAG,GAAEC,IAAI,CAACC,GAAL,EAAW,EADN;AAEZlC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAG,GAAET,IAAK;AAAjB,OAFM;AAGZa,MAAAA,IAAI,EAAE,WAHM;AAIZoB,MAAAA,QAAQ,EAAE;AACNU,QAAAA,CAAC,EAAE,CAAC,EADE;AAENC,QAAAA,CAAC,EAAE;AAFG;AAJE,KAAhB;AASAL,IAAAA,OAAO,CAAC/B,IAAR,GAAe,EAAE,GAAG+B,OAAO,CAAC/B,IAAb;AAAmBgC,MAAAA,EAAE,EAAG,GAAED,OAAO,CAACC,EAAG;AAArC,KAAf;AAEA1C,IAAAA,WAAW,CAAE+C,IAAD,IAAU;AAClB,aAAO,CAAC,GAAGA,IAAJ,EAAUN,OAAV,CAAP;AACH,KAFU,CAAX;AAGAtC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAhBD;;AAmBA,QAAMkD,wBAAwB,GAAG,MAAM;AACnC,UAAMZ,OAAO,GAAG;AACZC,MAAAA,EAAE,EAAG,GAAEC,IAAI,CAACC,GAAL,EAAW,EADN;AAEZlC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAG,GAAET,IAAK;AAAjB,OAFM;AAGZa,MAAAA,IAAI,EAAE,gBAHM;AAIZoB,MAAAA,QAAQ,EAAE;AACNU,QAAAA,CAAC,EAAE,CAAC,EADE;AAENC,QAAAA,CAAC,EAAE;AAFG;AAJE,KAAhB;AASAL,IAAAA,OAAO,CAAC/B,IAAR,GAAe,EAAE,GAAG+B,OAAO,CAAC/B,IAAb;AAAmBgC,MAAAA,EAAE,EAAG,GAAED,OAAO,CAACC,EAAG;AAArC,KAAf;AAEA1C,IAAAA,WAAW,CAAE+C,IAAD,IAAU;AAClB,aAAO,CAAC,GAAGA,IAAJ,EAAUN,OAAV,CAAP;AACH,KAFU,CAAX;AAGAtC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAhBD;;AAmBA,QAAMmD,sBAAsB,GAAG,MAAM;AACjC,UAAMb,OAAO,GAAG;AACZC,MAAAA,EAAE,EAAG,GAAEC,IAAI,CAACC,GAAL,EAAW,EADN;AAEZlC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAG,GAAET,IAAK;AAAjB,OAFM;AAGZa,MAAAA,IAAI,EAAE,cAHM;AAIZoB,MAAAA,QAAQ,EAAE;AACNU,QAAAA,CAAC,EAAE,CAAC,EADE;AAENC,QAAAA,CAAC,EAAE;AAFG;AAJE,KAAhB;AASAL,IAAAA,OAAO,CAAC/B,IAAR,GAAe,EAAE,GAAG+B,OAAO,CAAC/B,IAAb;AAAmBgC,MAAAA,EAAE,EAAG,GAAED,OAAO,CAACC,EAAG;AAArC,KAAf;AAEA1C,IAAAA,WAAW,CAAE+C,IAAD,IAAU;AAClB,aAAO,CAAC,GAAGA,IAAJ,EAAUN,OAAV,CAAP;AACH,KAFU,CAAX;AAGAtC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAhBD;;AAmBA,QAAMoD,uBAAuB,GAAG,MAAM;AAClC,UAAMd,OAAO,GAAG;AACZC,MAAAA,EAAE,EAAG,GAAEC,IAAI,CAACC,GAAL,EAAW,EADN;AAEZlC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAG,GAAET,IAAK;AAAjB,OAFM;AAGZa,MAAAA,IAAI,EAAE,eAHM;AAIZoB,MAAAA,QAAQ,EAAE;AACNU,QAAAA,CAAC,EAAE,CAAC,EADE;AAENC,QAAAA,CAAC,EAAE;AAFG;AAJE,KAAhB;AASAL,IAAAA,OAAO,CAAC/B,IAAR,GAAe,EAAE,GAAG+B,OAAO,CAAC/B,IAAb;AAAmBgC,MAAAA,EAAE,EAAG,GAAED,OAAO,CAACC,EAAG;AAArC,KAAf;AAEA1C,IAAAA,WAAW,CAAE+C,IAAD,IAAU;AAClB,aAAO,CAAC,GAAGA,IAAJ,EAAUN,OAAV,CAAP;AACH,KAFU,CAAX;AAGAtC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAhBD,CA7M4B,CAgO5B;;;AAEA,QAAMqD,cAAc,GAAG,MAAM;AACzB,UAAMf,OAAO,GAAG;AACZC,MAAAA,EAAE,EAAG,GAAEC,IAAI,CAACC,GAAL,EAAW,EADN;AAEZlC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAG,GAAET,IAAK;AAAjB,OAFM;AAGZa,MAAAA,IAAI,EAAE,MAHM;AAIZoB,MAAAA,QAAQ,EAAE;AACNU,QAAAA,CAAC,EAAE,CADG;AAENC,QAAAA,CAAC,EAAE;AAFG;AAJE,KAAhB;AASAL,IAAAA,OAAO,CAAC/B,IAAR,GAAe,EAAE,GAAG+B,OAAO,CAAC/B,IAAb;AAAmBgC,MAAAA,EAAE,EAAG,GAAED,OAAO,CAACC,EAAG;AAArC,KAAf;AAEA1C,IAAAA,WAAW,CAAE+C,IAAD,IAAU;AAClB,aAAO,CAAC,GAAGA,IAAJ,EAAUN,OAAV,CAAP;AACH,KAFU,CAAX;AAGAtC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAhBD,CAlO4B,CAqP5B;;;AAGA,QAAMsD,iBAAiB,GAAG,CAACC,OAAD,EAAUC,aAAV,KACtB3D,WAAW,CAAEc,GAAD,IAASzB,UAAU,CAACqE,OAAD,EAAUC,aAAV,EAAyB7C,GAAzB,CAApB,CADf,CAxP4B,CA6P5B;;;AAEA,QAAM8C,YAAY,GAAIC,CAAD,IAAO;AACxB,QAAIC,UAAU,GAAGD,CAAC,CAACE,MAAF,CAASC,SAAT,CAAmBC,QAAnB,EAAjB;AACA,QAAIC,KAAK,GAAGJ,UAAU,CAACK,OAAX,CAAoB,OAApB,CAAZ;AACAD,IAAAA,KAAK,IAAI,EAAT;AACA,UAAME,SAAS,GAAGN,UAAU,CAACO,MAAX,CAAkBH,KAAlB,EAAyB,EAAzB,CAAlB;AAEAnE,IAAAA,QAAQ,CAACuE,OAAT,CAAkBC,QAAD,IAAc;AAC3B,UAAIA,QAAQ,CAAC7B,EAAT,KAAgB0B,SAApB,EAA+B;AAC3B/D,QAAAA,aAAa,CAACkE,QAAD,CAAb;AACH;AACJ,KAJD,EANwB,CAWxB;AACH,GAZD,CA/P4B,CA8Q5B;;;AAGA,QAAMC,UAAU,GAAI9B,EAAD,IAAQ;AACvB,QAAI3C,QAAQ,CAAC2C,EAAD,CAAR,KAAiB+B,SAAjB,IAA8B/B,EAAE,KAAK,kBAAzC,EAA6D;AACzD1C,MAAAA,WAAW,CAAEc,GAAD,IAAS1B,cAAc,CAAC,CAACW,QAAQ,CAAC2C,EAAD,CAAT,CAAD,EAAiB5B,GAAjB,CAAxB,CAAX;AAEH,KAHD,MAIK;AACDf,MAAAA,QAAQ,CAAC2C,EAAD,CAAR,GAAe,UAAUgC,KAAV,EAAiB;AAC5BC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAFD;AAGH;AACJ,GAVD,CAjR4B,CA8R5B;;;AAEA,QAAMG,iBAAiB,GAAG,MAAM;AAC5B,QAAI,CAACzE,UAAL,EAAiB;AACjBJ,IAAAA,WAAW,CACPD,QAAQ,CAAC+E,GAAT,CAAcP,QAAD,IAAc;AACvB,UAAIA,QAAQ,CAAC7B,EAAT,KAAgBtC,UAAU,CAACsC,EAA/B,EAAmC;AAC/B,eAAO,EACH,GAAG6B,QADA;AAEH7D,UAAAA,IAAI,EAAE;AAAEC,YAAAA,KAAK,EAAEL,OAAT;AAAkBoC,YAAAA,EAAE,EAAE6B,QAAQ,CAAC7D,IAAT,CAAcgC;AAApC;AAFH,SAAP;AAIH;;AAED,aAAO6B,QAAP;AACH,KATD,CADO,CAAX;AAYH,GAdD;;AAiBA,QAAMQ,MAAM,GAAIC,iBAAD,IAAuB;AAClCvE,IAAAA,WAAW,CAACuE,iBAAD,CAAX;AACAA,IAAAA,iBAAiB,CAACC,OAAlB;AACH,GAHD,CAjT4B,CAsT5B;;;AACA,QAAMC,kBAAkB,GAAG,MAAM;AAC7BP,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBpE,QAAQ,CAAC2E,WAAT,EAArB,EAD6B,CAE7B;;AACAzD,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BE,IAAI,CAACC,SAAL,CAAetB,QAAQ,CAAC2E,WAAT,EAAf,CAA9B;AACA,QAAIC,GAAG,GAAGvD,IAAI,CAACC,SAAL,CAAetB,QAAQ,CAAC2E,WAAT,EAAf,CAAV;AACAvF,IAAAA,MAAM,CAACyF,IAAP,CAAYD,GAAZ;AACH,GAND;;AAQAxF,EAAAA,MAAM,CAAC0F,MAAP,GAAgB,MAAM;AAClBX,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,GAFD;;AAIAhF,EAAAA,MAAM,CAAC2F,SAAP,GAAoBb,KAAD,IAAW;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAAK,CAAChE,IAApC;AACH,GAFD,CAnU4B,CAwU5B;;;AAEA,QAAMM,KAAK,GAAG;AACVmB,IAAAA,QAAQ,EAAE,UADA;AAEVqD,IAAAA,GAAG,EAAE,KAFK;AAGVC,IAAAA,IAAI,EAAE,KAHI;AAIVC,IAAAA,SAAS,EAAE,uBAJD;AAKVC,IAAAA,KAAK,EAAE,GALG;AAMVC,IAAAA,OAAO,EAAE,kBANC;AAOVC,IAAAA,MAAM,EAAE,gBAPE;AAQVC,IAAAA,SAAS,EAAE,EARD;AASVC,IAAAA,CAAC,EAAE;AATO,GAAd;AAYA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBtH,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB;;AACA,QAAMsH,UAAU,GAAG,MAAMD,OAAO,CAAC,IAAD,CAAhC;;AACA,QAAME,WAAW,GAAG,MAAMF,OAAO,CAAC,KAAD,CAAjC;;AAKA,sBACI;AACI,IAAA,KAAK,EAAE;AACHG,MAAAA,MAAM,EAAE,MADL;AAEHT,MAAAA,KAAK,EAAE,MAFJ;AAGHE,MAAAA,MAAM,EAAE,iBAHL;AAIHQ,MAAAA,UAAU,EAAE;AAJT,KADX;AAAA,4BAQI,QAAC,SAAD;AACI,MAAA,QAAQ,EAAEtG,QADd;AAEI,MAAA,gBAAgB,EAAEyE,UAFtB;AAGI,MAAA,SAAS,EAAE5D,cAHf;AAII,MAAA,aAAa,EAAE,KAAK,EAJxB;AAKI,MAAA,YAAY,EAAE6C,iBALlB;AAMI,MAAA,SAAS,EAAE/D,SANf;AAOI,MAAA,UAAU,EAAE,IAPhB;AAQI,MAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CARd;AASI,MAAA,mBAAmB,EAAE;AAAEuB,QAAAA,MAAM,EAAE,KAAV;AAAiBqF,QAAAA,WAAW,EAAE;AAA9B,OATzB,CAUI;AAVJ;AAWI,MAAA,aAAa,EAAE1C,YAXnB;AAYI,MAAA,MAAM,EAAEmB,MAZZ;AAAA,8BAcI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,MAApB;AAA2B,QAAA,GAAG,EAAE,EAAhC;AAAoC,QAAA,IAAI,EAAE,CAA1C;AAA6C,QAAA,KAAK,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,cAdJ,eA+BI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eA0CI;AAAA,8BACI;AACI,QAAA,KAAK,EAAE7E,IADX;AAEI,QAAA,QAAQ,EAAG2D,CAAD,IAAO1D,OAAO,CAAC0D,CAAC,CAACE,MAAF,CAASwC,KAAV,CAF5B;AAGI,QAAA,IAAI,EAAC,MAHT;AAII,QAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE/C,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eAWI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,MAAMgB,UAAU,CAAC,CAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,eAeI;AAAA,+BACQ,QAAC,SAAD;AAAW,UAAA,OAAO,EAAEzE,QAApB;AAA8B,UAAA,QAAQ,EAAEE;AAAxC;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,cAfJ,eAoBI;AAAQ,QAAA,OAAO,EAAEiG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBJ,eAqBI,QAAC,KAAD;AACI,QAAA,WAAW,MADf;AAEI,QAAA,IAAI,EAAEF,IAFV;AAGI,QAAA,OAAO,EAAEG,WAHb;AAII,2BAAgB,0BAJpB;AAKI,4BAAiB,gCALrB;AAAA,+BAOI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAEnF,KAAT;AAAA,kCACI,QAAC,UAAD;AAAY,YAAA,EAAE,EAAC,0BAAf;AAA0C,YAAA,OAAO,EAAC,KAAlD;AAAwD,YAAA,SAAS,EAAC,IAAlE;AAAuE,YAAA,KAAK,EAAC,QAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,UAAD;AAAY,YAAA,EAAE,EAAC,gCAAf;AAAgD,YAAA,OAAO,EAAC,IAAxD;AAA6D,YAAA,SAAS,EAAC,IAAvE;AAA4E,YAAA,EAAE,EAAE;AAAEwF,cAAAA,EAAE,EAAE;AAAN,aAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI,QAAC,UAAD;AAAY,YAAA,EAAE,EAAC,gCAAf;AAAgD,YAAA,OAAO,EAAC,IAAxD;AAA6D,YAAA,SAAS,EAAC,IAAvE;AAA4E,YAAA,EAAE,EAAE;AAAEA,cAAAA,EAAE,EAAE;AAAN,aAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,cArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA1CJ,eAqFI;AAAA,8BAGI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAErD,sBAA/B;AAAuD,QAAA,SAAS,EAAC,SAAjE;AAAA,+BACI;AAAK,UAAA,GAAG,EAAC,mGAAT;AAA6G,UAAA,GAAG,EAAC;AAAjH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHJ,eAOI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEC,mBAA/B;AAAoD,QAAA,SAAS,EAAC,MAA9D;AAAA,+BACI;AAAK,UAAA,GAAG,EAAC,qGAAT;AAA+G,UAAA,GAAG,EAAC;AAAnH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ,eAWI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEC,wBAA/B;AAAyD,QAAA,SAAS,EAAC,YAAnE;AAAA,+BACI;AAAK,UAAA,GAAG,EAAC,qGAAT;AAA+G,UAAA,GAAG,EAAC;AAAnH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ,eAeI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEC,sBAA/B;AAAuD,QAAA,SAAS,EAAC,UAAjE;AAAA,+BACI;AAAK,UAAA,GAAG,EAAC,qGAAT;AAA+G,UAAA,GAAG,EAAC;AAAnH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAfJ,eAmBI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEC,uBAA/B;AAAwD,QAAA,SAAS,EAAC,WAAlE;AAAA,+BACI;AAAK,UAAA,GAAG,EAAC,qGAAT;AAA+G,UAAA,GAAG,EAAC;AAAnH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAnBJ,eAuBI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEf,mBAA/B;AAAoD,QAAA,SAAS,EAAC,SAA9D;AAAA,+BACI;AAAK,UAAA,GAAG,EAAC,qGAAT;AAA+G,UAAA,GAAG,EAAC;AAAnH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAvBJ,eA4BI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEQ,gBAA/B;AAAiD,QAAA,SAAS,EAAC,OAA3D;AAAA,+BACI;AAAK,UAAA,GAAG,EAAC,qGAAT;AAA+G,UAAA,GAAG,EAAC;AAAnH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA5BJ,eAgCI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEC,cAA/B;AAA+C,QAAA,SAAS,EAAC,QAAzD;AAAA,+BACI;AAAK,UAAA,GAAG,EAAC,qGAAT;AAA+G,UAAA,GAAG,EAAC;AAAnH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAhCJ,eAoCI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEC,cAA/B;AAA+C,QAAA,SAAS,EAAC,UAAzD;AAAA,+BACI;AAAK,UAAA,GAAG,EAAC,qGAAT;AAA+G,UAAA,GAAG,EAAC;AAAnH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cApCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YArFJ,eA8HI;AAAA,8BACI;AACI,QAAA,KAAK,EAAE5C,OADX;AAEI,QAAA,QAAQ,EAAGuD,CAAD,IAAOtD,UAAU,CAACsD,CAAC,CAACE,MAAF,CAASwC,KAAV,CAF/B;AAGI,QAAA,IAAI,EAAC;AAHT;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE1B,iBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA9HJ,eA0II;AAAA,6BAII;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEK,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YA1IJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0JH,CAvfD;;GAAMpF,iB;;KAAAA,iB;AAyfN,eAAeA,iBAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n// ------------------------- Удалить -------------------------\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Typography from '@mui/material/Typography';\n// -------------------------------------------\nimport { ExportCSV } from './ExportCSV ';\nimport \"./buttons styles.css\";\n// import { Tooltip } from '@mui/material';\nimport ReactFlow, {\n    removeElements,\n    updateEdge,\n    addEdge,\n    Background,\n    \n    // MiniMap,\n    Controls,\n    StepEdge\n} from 'react-flow-renderer';\n\nimport { nodeTypes } from './Nodes';\nimport styleConnect from './style-connect';\nconst socket = new WebSocket('ws://localhost:5000/')\n\nconst ReactFlowRenderer = () => {\n    const [elements, setElements] = useState([styleConnect]);\n\n    // ------------------- Экспорт в Excel ------------------\n\n    const fileName = 'Scada'\n    const [name, setName] = useState(\"\");\n    const [activeNode, setActiveNode] = useState();\n    const [newName, setNewName] = useState(\"\");\n    const [instance, setInstance] = useState();\n\n    useEffect(() => {\n        if (activeNode) setNewName(activeNode.data.label);\n    }, [activeNode]);\n\n\n\n    const connectHandler = (params) => {\n        setElements((els) =>\n            addEdge({ ...params, type: 'smoothstep', style: { stroke: '#f00' }}, els))\n    };\n\n\n   // ----------------------- Сохранение состояние страницы -------------------------- \n\n\n    const onConnect = useCallback((params) => StepEdges((eds) => addEdge(params, eds)), [setEdges]);\n    const onSave = useCallback( () => {\n        if(rfInstance) {\n            const flow = rfInstance.toObject();\n            localStorage.setItem(flowKey, JSON.stringify(flow));\n        }\n    }, [rfInstance]);\n\n    const OnRestore = useCallback(() => {\n        const reactFlow = async () => {\n            const flow = JSON.parse(localStorage.getItem(flowKey));\n\n            if (flow){\n                const {position} = flow.viewport;\n                setNodes(flow.nodes || []);\n                setEdges(flow.edges || []);\n            }\n        }\n        reactFlow();\n        [setNodes]\n    })\n\n\n    // ----------------------- Добавление элементов --------------------------\n\n    const addRectangleHandler = () => {\n        const newNode = {\n            id: `${Date.now()}`,\n            data: { label: `${name}` },\n            type: \"rectangle\",\n            position: {\n                x: 0,\n                y: 0\n            }\n        };\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n        setElements((prev) => {\n            return [...prev, newNode];\n        });\n        setName(\"\");\n    };\n\n    const addCircleHandler = () => {\n        const newNode = {\n            id: `${Date.now()}`,\n            data: { label: `${name}` },\n            type: \"circle\",\n            position: {\n                x: 0,\n                y: 0\n            }\n        };\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n        setElements((prev) => {\n            return [...prev, newNode];\n        });\n        setName(\"\");\n    };\n\n    const addFlagHandler = () => {\n        const newNode = {\n            id: `${Date.now()}`,\n            data: { label: `${name}` },\n            type: \"flag\",\n            position: {\n                x: 0,\n                y: 0\n            }\n        };\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n        setElements((prev) => {\n            return [...prev, newNode];\n        });\n        setName(\"\");\n    };\n\n\n    const addControlUnit = () => {\n        const newNode = {\n            id: `${Date.now()}`,\n            data: { label: `${name}` },\n            type: \"controlunit\",\n            position: {\n                x: 0,\n                y: 0\n            }\n        };\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n        setElements((prev) => {\n            return [...prev, newNode];\n        });\n        setName(\"\");\n    };\n\n\n    // ------------------- Добавление независимой задвижки ----------------\n\n    const addIndGateValveHandler = () => {\n        const newNode = {\n            id: `${Date.now()}`,\n            data: { label: `${name}` },\n            type: \"indgatevalve\",\n            position: {\n                x: -10,\n                y: 30\n            }\n        };\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n        setElements((prev) => {\n            return [...prev, newNode];\n        });\n        setName(\"\");\n    };\n\n\n    // ------------------- Добавление задвижки ----------------\n\n    const addGateValveHandler = () => {\n        const newNode = {\n            id: `${Date.now()}`,\n            data: { label: `${name}` },\n            type: \"gatevalve\",\n            position: {\n                x: -10,\n                y: 30\n            }\n        };\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n        setElements((prev) => {\n            return [...prev, newNode];\n        });\n        setName(\"\");\n    };\n\n\n    const addGateValveHandlerRight = () => {\n        const newNode = {\n            id: `${Date.now()}`,\n            data: { label: `${name}` },\n            type: \"gatevalveright\",\n            position: {\n                x: -10,\n                y: 30\n            }\n        };\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n        setElements((prev) => {\n            return [...prev, newNode];\n        });\n        setName(\"\");\n    };\n\n\n    const addGateValveHandlerBot = () => {\n        const newNode = {\n            id: `${Date.now()}`,\n            data: { label: `${name}` },\n            type: \"gatevalvebot\",\n            position: {\n                x: -10,\n                y: 30\n            }\n        };\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n        setElements((prev) => {\n            return [...prev, newNode];\n        });\n        setName(\"\");\n    };\n\n\n    const addGateValveHandlerLeft = () => {\n        const newNode = {\n            id: `${Date.now()}`,\n            data: { label: `${name}` },\n            type: \"gatevalveleft\",\n            position: {\n                x: -10,\n                y: 30\n            }\n        };\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n        setElements((prev) => {\n            return [...prev, newNode];\n        });\n        setName(\"\");\n    };\n\n\n    // -----------------------------------\n\n    const addTextHandler = () => {\n        const newNode = {\n            id: `${Date.now()}`,\n            data: { label: `${name}` },\n            type: \"text\",\n            position: {\n                x: 0,\n                y: 0\n            }\n        };\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\n\n        setElements((prev) => {\n            return [...prev, newNode];\n        });\n        setName(\"\");\n    };\n\n\n    // --------------- Убрать, грубо говоря, линии с задвижки ---------------\n\n\n    const edgeUpdateHandler = (oldEdge, newConnection) =>\n        setElements((els) => updateEdge(oldEdge, newConnection, els));\n\n\n\n    // --------------- Приближении при двойном нажатии на мышь ---------------\n\n    const clickHandler = (e) => {\n        var htmlString = e.target.outerHTML.toString();\n        var index = htmlString.indexOf(` id=\"`);\n        index += 15;\n        const currentId = htmlString.substr(index, 13);\n\n        elements.forEach((_current) => {\n            if (_current.id === currentId) {\n                setActiveNode(_current);\n            }\n        });\n        // setNewName(activeNode.data.label)\n    };\n\n\n    // --------------- Удаление ---------------\n\n\n    const deleteNode = (id) => {\n        if (elements[id] !== undefined || id === 'onElementsRemove') {\n            setElements((els) => removeElements([elements[id]], els));\n\n        }\n        else {\n            elements[id] = function (event) {\n                console.log(event);\n            }\n        }\n    };\n\n\n    // --------------- Обновление текста ---------------\n\n    const updateNodeHandler = () => {\n        if (!activeNode) return;\n        setElements(\n            elements.map((_current) => {\n                if (_current.id === activeNode.id) {\n                    return {\n                        ..._current,\n                        data: { label: newName, id: _current.data.id }\n                    };\n                }\n\n                return _current;\n            })\n        );\n    };\n\n\n    const onLoad = (reactFlowInstance) => {\n        setInstance(reactFlowInstance);\n        reactFlowInstance.fitView();\n    };\n\n    //save pos\n    const saveChangesHandler = () => {\n        console.log(\"state\", instance.getElements());\n        //отправка json\n        localStorage.setItem('state', JSON.stringify(instance.getElements()));\n        var pos = JSON.stringify(instance.getElements());\n        socket.send(pos);\n    };\n\n    socket.onopen = () => {\n        console.log('подключено');\n    }\n\n    socket.onmessage = (event) => {\n        console.log('есть сообщение', event.data)\n    }\n\n\n    // Модальное окно\n\n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 600,\n        bgcolor: 'background.paper',\n        border: '2px solid #000',\n        boxShadow: 24,\n        p: 4,\n    };\n\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n\n\n\n    return (\n        <div\n            style={{\n                height: \"75vh\",\n                width: \"75vw\",\n                border: \"1px solid black\",\n                marginLeft: \"12.5vw\"\n            }}\n        >\n            <ReactFlow\n                elements={elements}\n                onElementsRemove={deleteNode}\n                onConnect={connectHandler}\n                deleteKeyCode={8 || 46}\n                onEdgeUpdate={edgeUpdateHandler}\n                nodeTypes={nodeTypes}\n                snapToGrid={true}\n                snapGrid={[16, 16]}\n                connectionLineStyle={{ stroke: \"red\", strokeWidth: 2 }}\n                // При двойном нажатии  на мышку приближает \n                onDoubleClick={clickHandler}\n                onLoad={onLoad}\n            >\n                <Background variant=\"dots\" gap={15} size={2} color=\"#c8c8c8\" />\n                {/* Мини карта\n            <MiniMap\n                nodeColor={(node) => {\n                    switch (node.type) {\n                        case \"rectangle\":\n                            return \"red\";\n                        case \"circle\":\n                            return \"#00ff00\";\n                        case \"triangle\":\n                            return \"rgb(0,0,255)\";\n                        default:\n                            return \"#eee\";\n                    }   \n                }}\n            /> */}\n\n                <Controls />\n            </ReactFlow>\n\n            <div>\n                <input\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    type=\"text\"\n                    placeholder=\"Введите текст\"\n                />\n\n                <button type=\"button\" onClick={addTextHandler}>\n                    Текст   \n                </button>\n                <button type='button' onClick={() => deleteNode(0)} >\n                    Удаление\n                </button>\n\n                <button>\n                        <ExportCSV csvData={elements} fileName={fileName} />\n                </button>\n\n\n                <button onClick={handleOpen}>Справка </button>\n                <Modal\n                    keepMounted\n                    open={open}\n                    onClose={handleClose}\n                    aria-labelledby=\"keep-mounted-modal-title\"\n                    aria-describedby=\"keep-mounted-modal-description\"\n                >\n                    <Box sx={style}>\n                        <Typography id=\"keep-mounted-modal-title\" variant=\"h65\" component=\"h1\" align='center'>\n                            Справка\n                        </Typography>\n                        <Typography id=\"keep-mounted-modal-description\" variant=\"h6\" component=\"h2\" sx={{ mt: 2 }}>\n                            1)  Создание схемы\n                        </Typography>\n                        <Typography id=\"keep-mounted-modal-description\" variant=\"h6\" component=\"h2\" sx={{ mt: 1 }}>\n                                    Для создание схемы, необходимо добавить, нужные объекты, путем нажатия на кнопки добавления. Затем разместить объекты, так как нужно и соединить их\n                        </Typography>\n                    </Box>\n                </Modal>\n\n            </div>\n\n            <div>\n\n\n                <button type=\"button\" onClick={addIndGateValveHandler} className=\"IndZadv\">\n                    <img src=\"https://cdn.discordapp.com/attachments/565406946354528268/955394073412395008/5da0c98245011949.png\" alt='Задвижка'></img>\n                </button>\n\n                <button type=\"button\" onClick={addGateValveHandler} className=\"Zadv\">\n                    <img src=\"https://media.discordapp.net/attachments/565406946354528268/955138797417414656/9fe81764ae11e11a.png\" alt='Задвижка'></img>\n                </button>\n\n                <button type=\"button\" onClick={addGateValveHandlerRight} className=\"Zadv-Right\">\n                    <img src=\"https://media.discordapp.net/attachments/565406946354528268/955147487713325096/e985402b7a23f9ac.png\" alt='Задвижка'></img>\n                </button>\n\n                <button type=\"button\" onClick={addGateValveHandlerBot} className=\"Zadv-Bot\">\n                    <img src=\"https://media.discordapp.net/attachments/565406946354528268/955151784907784202/a0416a67cfa4061c.png\" alt='Задвижка'></img>\n                </button>\n\n                <button type=\"button\" onClick={addGateValveHandlerLeft} className=\"Zadv-Left\">\n                    <img src=\"https://media.discordapp.net/attachments/565406946354528268/955153077592281190/5bf4af1de854e78a.png\" alt='Задвижка'></img>\n                </button>\n\n                <button type=\"button\" onClick={addRectangleHandler} className=\"Cistern\">\n                    <img src='https://media.discordapp.net/attachments/565406946354528268/955140552184180757/4f9d807774b88b0e.png' alt='Цистерна'></img>\n                </button>\n\n\n                <button type=\"button\" onClick={addCircleHandler} className=\"Regul\">\n                    <img src=\"https://media.discordapp.net/attachments/565406946354528268/955138925733769337/20c16b7fc40cbf81.png\" alt='Регулятор'></img>\n                </button>\n\n                <button type=\"button\" onClick={addFlagHandler} className=\"Flaaag\">\n                    <img src=\"https://media.discordapp.net/attachments/565406946354528268/955138926069309460/c07fc1d24613f6c7.png\" alt='Флаг'></img>\n                </button>\n\n                <button type=\"button\" onClick={addControlUnit} className=\"Untitled\">\n                    <img src=\"https://media.discordapp.net/attachments/565406946354528268/955141072663748659/44f946ecc1121201.png\" alt='Untitled'></img>\n                </button>\n            </div>\n\n            <div>\n                <input\n                    value={newName}\n                    onChange={(e) => setNewName(e.target.value)}\n                    type=\"text\"\n                />\n\n                <button type=\"button\" onClick={updateNodeHandler}>\n                    Обновить\n                </button>\n            </div>\n\n            <div>\n\n\n\n                <button type=\"button\" onClick={saveChangesHandler}>\n                    Сохранить\n                </button>\n\n                {/*<button type='button' onClick={sendPos}>\n                Send Pos on Server\n            </button>*/}\n            </div>\n\n        </div>\n    );\n};\n\nexport default ReactFlowRenderer;"]},"metadata":{},"sourceType":"module"}