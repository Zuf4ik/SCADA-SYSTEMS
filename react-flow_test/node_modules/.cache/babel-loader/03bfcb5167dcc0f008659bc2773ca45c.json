{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438\\\\Scada-react-flow-main\\\\react-flow_test\\\\src\\\\react-flow-renderer\\\\LoadingJSON.jsx\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { ExportCSV } from './ExportCSV ';\nimport \"./css/buttons_styles.css\";\nimport ReactFlow, { removeElements, updateEdge, addEdge, Background, Controls, ReactFlowProvider, useZoomPanHelper } from 'react-flow-renderer';\nimport localforage from 'localforage';\nimport { nodeTypes } from './Nodes'; // const socket = new WebSocket('ws://localhost:5000/')\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlocalforage.config({\n  name: 'react-flow-docs',\n  storeName: 'flows'\n});\n\nclass LoadingJson extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null\n    };\n    this.handleFileSelect = this.handleFileSelect.bind(this);\n  }\n\n  displayData(content) {\n    this.setState({\n      data: content\n    });\n  }\n\n  handleFileSelect(evt) {\n    let files = evt.target.files;\n\n    if (!files.length) {\n      alert('Файл не выбран');\n      return;\n    }\n\n    let file = files[0];\n    let that = this;\n    let reader = new FileReader();\n\n    reader.onload = function (e) {\n      that.displayData(e.target.result);\n    };\n\n    reader.readAsText(file);\n  }\n\n  render() {\n    var _s = $RefreshSig$();\n\n    const ReactFlowRenderer = () => {\n      _s();\n\n      const [elements, setElements] = useState([]); // ------------------- Экспорт в Excel ------------------\n\n      const fileName = 'Scada';\n      const [loadingJson, setloadinJson] = useState(\"\");\n      const [name, setName] = useState(\"\");\n      const [activeNode, setActiveNode] = useState();\n      const [newName, setNewName] = useState(\"\");\n      const [instance, setInstance] = useState();\n      const {\n        transform\n      } = useZoomPanHelper();\n      const flowKey = 'example-flow';\n      useEffect(() => {\n        if (activeNode) setNewName(activeNode.data.label);\n      }, [activeNode]); // --------------- Сохранение в локальном хранилище ---------------\n\n      const onSave = useCallback(() => {\n        if (loadingJson) {\n          const flow = loadingJson.toObject();\n          localforage.setItem(flowKey, flow);\n          console.log(\"Объекты сохранены\");\n        }\n      }, [instance]); // --------------- Загрузка ---------------\n\n      const onRestore = useCallback(() => {\n        const restoreFlow = async () => {\n          const flow = await localforage.getItem(flowKey);\n\n          if (flow) {\n            const [x = 0, y = 0] = flow.position;\n            setElements(flow.elements || []);\n            transform({\n              x,\n              y,\n              zoom: flow.zoom || 0\n            });\n          }\n        };\n\n        restoreFlow();\n      }, [setElements, transform]); // --------------- Загрузка через локальный диск ---------------\n\n      const onLoadingJson = useCallback(() => {\n        const restoreFlow = async () => {\n          const flow = await JSON.parse(loadingJson);\n\n          if (flow) {\n            const [x = 0, y = 0] = flow.position;\n            setElements(flow.elements || []);\n            transform({\n              x,\n              y,\n              zoom: flow.zoom || 0\n            });\n          }\n        };\n\n        restoreFlow();\n      }, [setElements, transform]); // --------------- Сохранение через локальный диск ---------------\n\n      const exportToJson = () => {\n        let filename = \"Scada-systems.json\";\n        let contentType = \"application/json;charset=utf-8;\";\n\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n          const blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(elements)))], {\n            type: contentType\n          });\n          navigator.msSaveOrOpenBlob(blob, filename);\n        } else {\n          const a = document.createElement('a');\n          a.download = filename;\n          a.href = 'data:' + contentType + ',' + encodeURIComponent(JSON.stringify(elements, null, 1));\n          a.target = '_blank';\n          document.body.appendChild(a);\n          a.click();\n          document.body.removeChild(a);\n        }\n      }; // --------------- Удаление ---------------\n\n\n      const elementRemoveHandler = elementTobeRemoved => {\n        setElements(prev => removeElements(elementTobeRemoved, prev));\n      };\n\n      const connectHandler = params => {\n        setElements(els => addEdge({ ...params,\n          type: 'step',\n          style: {\n            stroke: 'red'\n          }\n        }, els));\n      }; // ----------------------- Добавление элементов --------------------------\n\n\n      const addRectangleHandler = () => {\n        const newNode = {\n          id: `${Date.now()}`,\n          data: {\n            label: `${name}`\n          },\n          type: \"pump\",\n          position: {\n            x: 0,\n            y: 0\n          }\n        };\n        newNode.data = { ...newNode.data,\n          id: `${newNode.id}`\n        };\n        setElements(prev => {\n          return [...prev, newNode];\n        });\n        setName(\"\");\n      };\n\n      const addCircleHandler = () => {\n        const newNode = {\n          id: `${Date.now()}`,\n          data: {\n            label: `${name}`\n          },\n          type: \"circle\",\n          position: {\n            x: 0,\n            y: 0\n          }\n        };\n        newNode.data = { ...newNode.data,\n          id: `${newNode.id}`\n        };\n        setElements(prev => {\n          return [...prev, newNode];\n        });\n        setName(\"\");\n      };\n\n      const addFlagHandler = () => {\n        const newNode = {\n          id: `${Date.now()}`,\n          data: {\n            label: `${name}`\n          },\n          type: \"flag\",\n          position: {\n            x: 0,\n            y: 0\n          }\n        };\n        newNode.data = { ...newNode.data,\n          id: `${newNode.id}`\n        };\n        setElements(prev => {\n          return [...prev, newNode];\n        });\n        setName(\"\");\n      };\n\n      const addControlUnit = () => {\n        const newNode = {\n          id: `${Date.now()}`,\n          data: {\n            label: `${name}`\n          },\n          type: \"controlunit\",\n          position: {\n            x: 0,\n            y: 0\n          }\n        };\n        newNode.data = { ...newNode.data,\n          id: `${newNode.id}`\n        };\n        setElements(prev => {\n          return [...prev, newNode];\n        });\n        setName(\"\");\n      }; // ------------------- Добавление независимой задвижки ----------------\n\n\n      const addIndGateValveHandler = () => {\n        const newNode = {\n          id: `${Date.now()}`,\n          data: {\n            label: `${name}`\n          },\n          type: \"indgatevalve\",\n          position: {\n            x: -10,\n            y: 30\n          }\n        };\n        newNode.data = { ...newNode.data,\n          id: `${newNode.id}`\n        };\n        setElements(prev => {\n          return [...prev, newNode];\n        });\n        setName(\"\");\n      }; // ------------------- Добавление задвижки ----------------\n\n\n      const addGateValveHandler = () => {\n        const newNode = {\n          id: `${Date.now()}`,\n          data: {\n            label: `${name}`\n          },\n          type: \"gatevalve\",\n          position: {\n            x: -10,\n            y: 30\n          }\n        };\n        newNode.data = { ...newNode.data,\n          id: `${newNode.id}`\n        };\n        setElements(prev => {\n          return [...prev, newNode];\n        });\n        setName(\"\");\n      };\n\n      const addGateValveHandlerRight = () => {\n        const newNode = {\n          id: `${Date.now()}`,\n          data: {\n            label: `${name}`\n          },\n          type: \"gatevalveright\",\n          position: {\n            x: -10,\n            y: 30\n          }\n        };\n        newNode.data = { ...newNode.data,\n          id: `${newNode.id}`\n        };\n        setElements(prev => {\n          return [...prev, newNode];\n        });\n        setName(\"\");\n      };\n\n      const addGateValveHandlerBot = () => {\n        const newNode = {\n          id: `${Date.now()}`,\n          data: {\n            label: `${name}`\n          },\n          type: \"gatevalvebot\",\n          position: {\n            x: -10,\n            y: 30\n          }\n        };\n        newNode.data = { ...newNode.data,\n          id: `${newNode.id}`\n        };\n        setElements(prev => {\n          return [...prev, newNode];\n        });\n        setName(\"\");\n      };\n\n      const addGateValveHandlerLeft = () => {\n        const newNode = {\n          id: `${Date.now()}`,\n          data: {\n            label: `${name}`\n          },\n          type: \"gatevalveleft\",\n          position: {\n            x: -10,\n            y: 30\n          }\n        };\n        newNode.data = { ...newNode.data,\n          id: `${newNode.id}`\n        };\n        setElements(prev => {\n          return [...prev, newNode];\n        });\n        setName(\"\");\n      }; // -----------------------------------\n\n\n      const addTextHandler = () => {\n        const newNode = {\n          id: `${Date.now()}`,\n          data: {\n            label: `${name}`\n          },\n          type: \"text\",\n          position: {\n            x: 0,\n            y: 0\n          }\n        };\n        newNode.data = { ...newNode.data,\n          id: `${newNode.id}`\n        };\n        setElements(prev => {\n          return [...prev, newNode];\n        });\n        setName(\"\");\n      }; // --------------- Убрать, грубо говоря, линии с задвижки ---------------\n\n\n      const edgeUpdateHandler = (oldEdge, newConnection) => setElements(els => updateEdge(oldEdge, newConnection, els)); // --------------- Приближении при двойном нажатии на мышь ---------------\n\n\n      const clickHandler = e => {\n        var htmlString = e.target.outerHTML.toString();\n        var index = htmlString.indexOf(` id=\"`);\n        index += 15;\n        const currentId = htmlString.substr(index, 13);\n        elements.forEach(_current => {\n          if (_current.id === currentId) {\n            setActiveNode(_current);\n          }\n        }); // setNewName(activeNode.data.label)\n      }; // --------------- Обновление текста ---------------\n\n\n      const updateNodeHandler = () => {\n        if (!activeNode) return;\n        setElements(elements.map(_current => {\n          if (_current.id === activeNode.id) {\n            return { ..._current,\n              data: {\n                label: newName,\n                id: _current.data.id\n              }\n            };\n          }\n\n          return _current;\n        }));\n      };\n\n      const onLoad = reactFlowInstance => {\n        setInstance(reactFlowInstance);\n        reactFlowInstance.fitView();\n      }; // --------------- Сохранение через сервер ---------------\n      // //save pos\n      // const saveChangesHandler = () => {\n      //     console.log(\"state\", instance.getElements());\n      //     //отправка json\n      //     localStorage.setItem('state', JSON.stringify(instance.getElements()));\n      //     var pos = JSON.stringify(instance.getElements());\n      //     socket.send(pos);\n      // };\n      // socket.onopen = () => {\n      //     console.log('подключено');\n      // }\n      // socket.onmessage = (event) => {\n      //     console.log('есть сообщение')\n      //     const dataSave = JSON.parse(JSON.stringify(event.data));\n      //     console.log(dataSave)\n      // }\n\n    };\n\n    _s(ReactFlowRenderer, \"QktHjbOqK/4xaeCNdlTl7dAWv9E=\", false, function () {\n      return [useZoomPanHelper];\n    });\n\n    const data = this.state.data;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"75vh\",\n        width: \"75vw\",\n        border: \"1px solid black\",\n        marginLeft: \"14.7em\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n        elements: elements,\n        onElementsRemove: elementRemoveHandler,\n        onConnect: connectHandler,\n        deleteKeyCode: 8 || 46,\n        onEdgeUpdate: edgeUpdateHandler,\n        nodeTypes: nodeTypes,\n        snapToGrid: true,\n        snapGrid: [16, 16],\n        connectionLineStyle: {\n          stroke: \"red\",\n          type: 'step',\n          strokeWidth: 2\n        } // При двойном нажатии  на мышку приближает \n        ,\n        onDoubleClick: clickHandler,\n        onLoad: onLoad,\n        children: [/*#__PURE__*/_jsxDEV(Background, {\n          variant: \"dots\",\n          gap: 15,\n          size: 2,\n          color: \"#c8c8c8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: name,\n          onChange: e => setName(e.target.value),\n          type: \"text\",\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addTextHandler,\n          children: \"\\u0422\\u0435\\u043A\\u0441\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: /*#__PURE__*/_jsxDEV(ExportCSV, {\n            csvData: elements,\n            fileName: fileName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addIndGateValveHandler,\n          className: \"IndZadv\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://cdn.discordapp.com/attachments/565406946354528268/955394073412395008/5da0c98245011949.png\",\n            alt: \"\\u0417\\u0430\\u0434\\u0432\\u0438\\u0436\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addGateValveHandler,\n          className: \"Zadv\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://media.discordapp.net/attachments/565406946354528268/955138797417414656/9fe81764ae11e11a.png\",\n            alt: \"\\u0417\\u0430\\u0434\\u0432\\u0438\\u0436\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addGateValveHandlerRight,\n          className: \"Zadv-Right\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://media.discordapp.net/attachments/565406946354528268/955147487713325096/e985402b7a23f9ac.png\",\n            alt: \"\\u0417\\u0430\\u0434\\u0432\\u0438\\u0436\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addGateValveHandlerBot,\n          className: \"Zadv-Bot\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://media.discordapp.net/attachments/565406946354528268/955151784907784202/a0416a67cfa4061c.png\",\n            alt: \"\\u0417\\u0430\\u0434\\u0432\\u0438\\u0436\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addGateValveHandlerLeft,\n          className: \"Zadv-Left\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://media.discordapp.net/attachments/565406946354528268/955153077592281190/5bf4af1de854e78a.png\",\n            alt: \"\\u0417\\u0430\\u0434\\u0432\\u0438\\u0436\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addRectangleHandler,\n          className: \"Cistern\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://media.discordapp.net/attachments/565406946354528268/955140552184180757/4f9d807774b88b0e.png\",\n            alt: \"\\u0426\\u0438\\u0441\\u0442\\u0435\\u0440\\u043D\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addCircleHandler,\n          className: \"Regul\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://media.discordapp.net/attachments/565406946354528268/955138925733769337/20c16b7fc40cbf81.png\",\n            alt: \"\\u0420\\u0435\\u0433\\u0443\\u043B\\u044F\\u0442\\u043E\\u0440\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addFlagHandler,\n          className: \"Flaaag\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://media.discordapp.net/attachments/565406946354528268/955138926069309460/c07fc1d24613f6c7.png\",\n            alt: \"\\u0424\\u043B\\u0430\\u0433\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addControlUnit,\n          className: \"Untitled\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://media.discordapp.net/attachments/565406946354528268/955141072663748659/44f946ecc1121201.png\",\n            alt: \"Untitled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onRestore,\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onSave,\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u043D\\u0438\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: exportToJson,\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: this.handleFileSelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 13\n          }, this), data && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", data, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default LoadingJson; // export const exportConst = {\n//   dataJson: this.props.data\n// };","map":{"version":3,"sources":["E:/Загрузки/Scada-react-flow-main/react-flow_test/src/react-flow-renderer/LoadingJSON.jsx"],"names":["React","useState","useEffect","useCallback","ExportCSV","ReactFlow","removeElements","updateEdge","addEdge","Background","Controls","ReactFlowProvider","useZoomPanHelper","localforage","nodeTypes","config","name","storeName","LoadingJson","Component","constructor","props","state","data","handleFileSelect","bind","displayData","content","setState","evt","files","target","length","alert","file","that","reader","FileReader","onload","e","result","readAsText","render","ReactFlowRenderer","elements","setElements","fileName","loadingJson","setloadinJson","setName","activeNode","setActiveNode","newName","setNewName","instance","setInstance","transform","flowKey","label","onSave","flow","toObject","setItem","console","log","onRestore","restoreFlow","getItem","x","y","position","zoom","onLoadingJson","JSON","parse","exportToJson","filename","contentType","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","stringify","type","a","document","createElement","download","href","encodeURIComponent","body","appendChild","click","removeChild","elementRemoveHandler","elementTobeRemoved","prev","connectHandler","params","els","style","stroke","addRectangleHandler","newNode","id","Date","now","addCircleHandler","addFlagHandler","addControlUnit","addIndGateValveHandler","addGateValveHandler","addGateValveHandlerRight","addGateValveHandlerBot","addGateValveHandlerLeft","addTextHandler","edgeUpdateHandler","oldEdge","newConnection","clickHandler","htmlString","outerHTML","toString","index","indexOf","currentId","substr","forEach","_current","updateNodeHandler","map","onLoad","reactFlowInstance","fitView","height","width","border","marginLeft","strokeWidth","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { ExportCSV } from './ExportCSV ';\r\nimport \"./css/buttons_styles.css\"\r\nimport ReactFlow, {\r\n  removeElements,\r\n  updateEdge,\r\n  addEdge,\r\n  Background,\r\n  Controls,\r\n  ReactFlowProvider,\r\n  useZoomPanHelper\r\n} from 'react-flow-renderer';\r\nimport localforage from 'localforage';\r\nimport { nodeTypes } from './Nodes';\r\n// const socket = new WebSocket('ws://localhost:5000/')\r\nlocalforage.config({\r\n  name: 'react-flow-docs',\r\n  storeName: 'flows',\r\n});\r\n\r\n\r\n\r\nclass LoadingJson extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null\r\n    };\r\n    this.handleFileSelect = this.handleFileSelect.bind(this);\r\n  }\r\n\r\n  displayData(content) {\r\n    this.setState({ data: content });\r\n  }\r\n\r\n  handleFileSelect(evt) {\r\n    let files = evt.target.files;\r\n    if (!files.length) {\r\n      alert('Файл не выбран');\r\n      return;\r\n    }\r\n    let file = files[0];\r\n    let that = this;\r\n    let reader = new FileReader();\r\n    reader.onload = function (e) {\r\n      that.displayData(e.target.result);\r\n    };\r\n    reader.readAsText(file);\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n\r\n    const ReactFlowRenderer = () => {\r\n\r\n      const [elements, setElements] = useState([]);\r\n\r\n      // ------------------- Экспорт в Excel ------------------\r\n\r\n      const fileName = 'Scada'\r\n      const [loadingJson, setloadinJson] = useState(\"\");\r\n      const [name, setName] = useState(\"\");\r\n      const [activeNode, setActiveNode] = useState();\r\n      const [newName, setNewName] = useState(\"\");\r\n      const [instance, setInstance] = useState();\r\n      const { transform } = useZoomPanHelper();\r\n\r\n      const flowKey = 'example-flow';\r\n\r\n      useEffect(() => {\r\n        if (activeNode) setNewName(activeNode.data.label);\r\n      }, [activeNode]);\r\n\r\n\r\n      // --------------- Сохранение в локальном хранилище ---------------\r\n\r\n      const onSave = useCallback(() => {\r\n\r\n        if (loadingJson) {\r\n          const flow = loadingJson.toObject();\r\n          localforage.setItem(flowKey, flow);\r\n          console.log(\"Объекты сохранены\")\r\n        }\r\n\r\n      }, [instance]);\r\n\r\n\r\n\r\n      // --------------- Загрузка ---------------\r\n\r\n      const onRestore = useCallback(() => {\r\n        const restoreFlow = async () => {\r\n          const flow = await localforage.getItem(flowKey);\r\n\r\n\r\n          if (flow) {\r\n            const [x = 0, y = 0] = flow.position;\r\n            setElements(flow.elements || []);\r\n            transform({ x, y, zoom: flow.zoom || 0 });\r\n          }\r\n\r\n        };\r\n        restoreFlow();\r\n      }, [setElements, transform]\r\n\r\n      );\r\n\r\n\r\n      // --------------- Загрузка через локальный диск ---------------\r\n\r\n      const onLoadingJson = useCallback(() => {\r\n        const restoreFlow = async () => {\r\n          const flow = await JSON.parse(loadingJson);\r\n\r\n\r\n          if (flow) {\r\n            const [x = 0, y = 0] = flow.position;\r\n            setElements(flow.elements || []);\r\n            transform({ x, y, zoom: flow.zoom || 0 });\r\n          }\r\n\r\n        };\r\n        restoreFlow();\r\n      }, [setElements, transform]\r\n\r\n      );\r\n\r\n      // --------------- Сохранение через локальный диск ---------------\r\n\r\n\r\n      const exportToJson = () => {\r\n        let filename = \"Scada-systems.json\";\r\n        let contentType = \"application/json;charset=utf-8;\";\r\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n          const blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(elements)))], { type: contentType });\r\n          navigator.msSaveOrOpenBlob(blob, filename);\r\n        } else {\r\n          const a = document.createElement('a');\r\n          a.download = filename;\r\n          a.href = 'data:' + contentType + ',' + encodeURIComponent(JSON.stringify(elements, null, 1));\r\n          a.target = '_blank';\r\n          document.body.appendChild(a);\r\n          a.click();\r\n          document.body.removeChild(a);\r\n        }\r\n      }\r\n\r\n\r\n      // --------------- Удаление ---------------\r\n\r\n\r\n      const elementRemoveHandler = (elementTobeRemoved) => {\r\n        setElements((prev) => removeElements(elementTobeRemoved, prev));\r\n      };\r\n\r\n\r\n      const connectHandler = (params) => {\r\n        setElements((els) =>\r\n          addEdge({ ...params, type: 'step', style: { stroke: 'red' } }, els))\r\n      };\r\n\r\n\r\n\r\n\r\n      // ----------------------- Добавление элементов --------------------------\r\n\r\n      const addRectangleHandler = () => {\r\n        const newNode = {\r\n          id: `${Date.now()}`,\r\n          data: { label: `${name}` },\r\n          type: \"pump\",\r\n          position: {\r\n            x: 0,\r\n            y: 0\r\n          }\r\n        };\r\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\r\n\r\n        setElements((prev) => {\r\n          return [...prev, newNode];\r\n        });\r\n        setName(\"\");\r\n      };\r\n\r\n      const addCircleHandler = () => {\r\n        const newNode = {\r\n          id: `${Date.now()}`,\r\n          data: { label: `${name}` },\r\n          type: \"circle\",\r\n          position: {\r\n            x: 0,\r\n            y: 0\r\n          }\r\n        };\r\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\r\n\r\n        setElements((prev) => {\r\n          return [...prev, newNode];\r\n        });\r\n        setName(\"\");\r\n      };\r\n\r\n      const addFlagHandler = () => {\r\n        const newNode = {\r\n          id: `${Date.now()}`,\r\n          data: { label: `${name}` },\r\n          type: \"flag\",\r\n          position: {\r\n            x: 0,\r\n            y: 0\r\n          }\r\n        };\r\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\r\n\r\n        setElements((prev) => {\r\n          return [...prev, newNode];\r\n        });\r\n        setName(\"\");\r\n      };\r\n\r\n\r\n      const addControlUnit = () => {\r\n        const newNode = {\r\n          id: `${Date.now()}`,\r\n          data: { label: `${name}` },\r\n          type: \"controlunit\",\r\n          position: {\r\n            x: 0,\r\n            y: 0\r\n          }\r\n        };\r\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\r\n\r\n        setElements((prev) => {\r\n          return [...prev, newNode];\r\n        });\r\n        setName(\"\");\r\n      };\r\n\r\n\r\n      // ------------------- Добавление независимой задвижки ----------------\r\n\r\n      const addIndGateValveHandler = () => {\r\n        const newNode = {\r\n          id: `${Date.now()}`,\r\n          data: { label: `${name}` },\r\n          type: \"indgatevalve\",\r\n          position: {\r\n            x: -10,\r\n            y: 30\r\n          }\r\n        };\r\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\r\n\r\n        setElements((prev) => {\r\n          return [...prev, newNode];\r\n        });\r\n        setName(\"\");\r\n      };\r\n\r\n\r\n      // ------------------- Добавление задвижки ----------------\r\n\r\n      const addGateValveHandler = () => {\r\n        const newNode = {\r\n          id: `${Date.now()}`,\r\n          data: { label: `${name}` },\r\n          type: \"gatevalve\",\r\n          position: {\r\n            x: -10,\r\n            y: 30\r\n          }\r\n        };\r\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\r\n\r\n        setElements((prev) => {\r\n          return [...prev, newNode];\r\n        });\r\n        setName(\"\");\r\n      };\r\n\r\n\r\n      const addGateValveHandlerRight = () => {\r\n        const newNode = {\r\n          id: `${Date.now()}`,\r\n          data: { label: `${name}` },\r\n          type: \"gatevalveright\",\r\n          position: {\r\n            x: -10,\r\n            y: 30\r\n          }\r\n        };\r\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\r\n\r\n        setElements((prev) => {\r\n          return [...prev, newNode];\r\n        });\r\n        setName(\"\");\r\n      };\r\n\r\n\r\n      const addGateValveHandlerBot = () => {\r\n        const newNode = {\r\n          id: `${Date.now()}`,\r\n          data: { label: `${name}` },\r\n          type: \"gatevalvebot\",\r\n          position: {\r\n            x: -10,\r\n            y: 30\r\n          }\r\n        };\r\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\r\n\r\n        setElements((prev) => {\r\n          return [...prev, newNode];\r\n        });\r\n        setName(\"\");\r\n      };\r\n\r\n\r\n      const addGateValveHandlerLeft = () => {\r\n        const newNode = {\r\n          id: `${Date.now()}`,\r\n          data: { label: `${name}` },\r\n          type: \"gatevalveleft\",\r\n          position: {\r\n            x: -10,\r\n            y: 30\r\n          }\r\n        };\r\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\r\n\r\n        setElements((prev) => {\r\n          return [...prev, newNode];\r\n        });\r\n        setName(\"\");\r\n      };\r\n\r\n\r\n      // -----------------------------------\r\n\r\n      const addTextHandler = () => {\r\n        const newNode = {\r\n          id: `${Date.now()}`,\r\n          data: { label: `${name}` },\r\n          type: \"text\",\r\n          position: {\r\n            x: 0,\r\n            y: 0\r\n          }\r\n        };\r\n        newNode.data = { ...newNode.data, id: `${newNode.id}` };\r\n\r\n        setElements((prev) => {\r\n          return [...prev, newNode];\r\n        });\r\n        setName(\"\");\r\n      };\r\n\r\n\r\n\r\n\r\n      // --------------- Убрать, грубо говоря, линии с задвижки ---------------\r\n\r\n\r\n      const edgeUpdateHandler = (oldEdge, newConnection) =>\r\n        setElements((els) => updateEdge(oldEdge, newConnection, els));\r\n\r\n\r\n\r\n      // --------------- Приближении при двойном нажатии на мышь ---------------\r\n\r\n      const clickHandler = (e) => {\r\n        var htmlString = e.target.outerHTML.toString();\r\n        var index = htmlString.indexOf(` id=\"`);\r\n        index += 15;\r\n        const currentId = htmlString.substr(index, 13);\r\n\r\n        elements.forEach((_current) => {\r\n          if (_current.id === currentId) {\r\n            setActiveNode(_current);\r\n          }\r\n        });\r\n        // setNewName(activeNode.data.label)\r\n      };\r\n\r\n\r\n      // --------------- Обновление текста ---------------\r\n\r\n      const updateNodeHandler = () => {\r\n        if (!activeNode) return;\r\n        setElements(\r\n          elements.map((_current) => {\r\n            if (_current.id === activeNode.id) {\r\n              return {\r\n                ..._current,\r\n                data: { label: newName, id: _current.data.id }\r\n              };\r\n            }\r\n\r\n            return _current;\r\n          })\r\n        );\r\n      };\r\n\r\n      const onLoad = (reactFlowInstance) => {\r\n        setInstance(reactFlowInstance);\r\n        reactFlowInstance.fitView();\r\n      };\r\n\r\n\r\n\r\n\r\n      // --------------- Сохранение через сервер ---------------\r\n\r\n\r\n      // //save pos\r\n      // const saveChangesHandler = () => {\r\n      //     console.log(\"state\", instance.getElements());\r\n      //     //отправка json\r\n\r\n      //     localStorage.setItem('state', JSON.stringify(instance.getElements()));\r\n      //     var pos = JSON.stringify(instance.getElements());\r\n      //     socket.send(pos);\r\n      // };\r\n\r\n      // socket.onopen = () => {\r\n      //     console.log('подключено');\r\n      // }\r\n\r\n      // socket.onmessage = (event) => {\r\n      //     console.log('есть сообщение')\r\n      //     const dataSave = JSON.parse(JSON.stringify(event.data));\r\n      //     console.log(dataSave)\r\n      // }\r\n\r\n\r\n\r\n    }\r\n    const data = this.state.data;\r\n    return (\r\n      <div style={{\r\n        height: \"75vh\",\r\n        width: \"75vw\",\r\n        border: \"1px solid black\",\r\n        marginLeft: \"14.7em\"\r\n      }}>\r\n        <ReactFlow\r\n          elements={elements}\r\n          onElementsRemove={elementRemoveHandler}\r\n          onConnect={connectHandler}\r\n          deleteKeyCode={8 || 46}\r\n          onEdgeUpdate={edgeUpdateHandler}\r\n          nodeTypes={nodeTypes}\r\n          snapToGrid={true}\r\n          snapGrid={[16, 16]}\r\n          connectionLineStyle={{ stroke: \"red\", type: 'step', strokeWidth: 2 }}\r\n          // При двойном нажатии  на мышку приближает \r\n          onDoubleClick={clickHandler}\r\n          onLoad={onLoad}\r\n        >\r\n          <Background variant=\"dots\" gap={15} size={2} color=\"#c8c8c8\" />\r\n\r\n          <Controls />\r\n        </ReactFlow>\r\n\r\n        <div className='Buttons'>\r\n          <input\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            type=\"text\"\r\n            placeholder=\"Введите текст\"\r\n          />\r\n\r\n          <button type=\"button\" onClick={addTextHandler}>\r\n            Текст\r\n          </button>\r\n\r\n          <button >\r\n            <ExportCSV csvData={elements} fileName={fileName} />\r\n          </button>\r\n\r\n\r\n        </div>\r\n\r\n        <div className='Buttons'>\r\n\r\n\r\n          <button type=\"button\" onClick={addIndGateValveHandler} className=\"IndZadv\">\r\n            <img src=\"https://cdn.discordapp.com/attachments/565406946354528268/955394073412395008/5da0c98245011949.png\" alt='Задвижка'></img>\r\n          </button>\r\n\r\n          <button type=\"button\" onClick={addGateValveHandler} className=\"Zadv\">\r\n            <img src=\"https://media.discordapp.net/attachments/565406946354528268/955138797417414656/9fe81764ae11e11a.png\" alt='Задвижка'></img>\r\n          </button>\r\n\r\n          <button type=\"button\" onClick={addGateValveHandlerRight} className=\"Zadv-Right\">\r\n            <img src=\"https://media.discordapp.net/attachments/565406946354528268/955147487713325096/e985402b7a23f9ac.png\" alt='Задвижка'></img>\r\n          </button>\r\n\r\n          <button type=\"button\" onClick={addGateValveHandlerBot} className=\"Zadv-Bot\">\r\n            <img src=\"https://media.discordapp.net/attachments/565406946354528268/955151784907784202/a0416a67cfa4061c.png\" alt='Задвижка'></img>\r\n          </button>\r\n\r\n          <button type=\"button\" onClick={addGateValveHandlerLeft} className=\"Zadv-Left\">\r\n            <img src=\"https://media.discordapp.net/attachments/565406946354528268/955153077592281190/5bf4af1de854e78a.png\" alt='Задвижка'></img>\r\n          </button>\r\n\r\n          <button type=\"button\" onClick={addRectangleHandler} className=\"Cistern\">\r\n            <img src='https://media.discordapp.net/attachments/565406946354528268/955140552184180757/4f9d807774b88b0e.png' alt='Цистерна'></img>\r\n          </button>\r\n\r\n\r\n          <button type=\"button\" onClick={addCircleHandler} className=\"Regul\">\r\n            <img src=\"https://media.discordapp.net/attachments/565406946354528268/955138925733769337/20c16b7fc40cbf81.png\" alt='Регулятор'></img>\r\n          </button>\r\n\r\n          <button type=\"button\" onClick={addFlagHandler} className=\"Flaaag\">\r\n            <img src=\"https://media.discordapp.net/attachments/565406946354528268/955138926069309460/c07fc1d24613f6c7.png\" alt='Флаг'></img>\r\n          </button>\r\n\r\n          <button type=\"button\" onClick={addControlUnit} className=\"Untitled\">\r\n            <img src=\"https://media.discordapp.net/attachments/565406946354528268/955141072663748659/44f946ecc1121201.png\" alt='Untitled'></img>\r\n          </button>\r\n        </div>\r\n\r\n        {/* <div className='Buttons'>\r\n                <input\r\n                    value={newName}\r\n                    onChange={(e) => setNewName(e.target.value)}\r\n                    type=\"text\"\r\n                />\r\n\r\n                <button type=\"button\" onClick={updateNodeHandler}>\r\n                    Обновить\r\n                </button>\r\n            </div> */}\r\n\r\n        <div className='Buttons'>\r\n\r\n\r\n          <button type='button' onClick={onRestore}>\r\n            Загрузить\r\n          </button>\r\n\r\n\r\n\r\n          <button type='button' onClick={onSave}>\r\n            Сохранить состояние\r\n          </button>\r\n\r\n\r\n          <button type='button' onClick={exportToJson}>\r\n            Сохранить\r\n          </button>\r\n\r\n\r\n          <div>\r\n            <input type=\"file\" onChange={this.handleFileSelect} />\r\n            {data && <p> {data} </p>}\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default LoadingJson\r\n\r\n// export const exportConst = {\r\n//   dataJson: this.props.data\r\n// };"]},"metadata":{},"sourceType":"module"}